{"version":3,"sources":["components/navegacion.jsx","modules/modulo1.js","components/formLenguaje.jsx","components/listLenguaje.jsx","components/operacionesLenguajes/invertirLenguaje.jsx","components/operacionesLenguajes/unionLenguajes.jsx","components/operacionesLenguajes/potenciaLenguaje.jsx","components/operacionesLenguajes/concatenacionLenguajes.jsx","components/operacionesLenguajes/interseccionLenguajes.jsx","components/operacionesLenguajes/diferenciaLenguajes.jsx","components/workinSpaceLenguajes.jsx","components/operacionesLenguajes.jsx","pages/page_lenguajes.jsx","components/formAlfabeto.jsx","components/listAlfabetos.jsx","components/operacionesAlfabetos/unionAlfabetos.jsx","components/operacionesAlfabetos/diferenciaAlfabetos.jsx","components/operacionesAlfabetos/interseccionAlfabetos.jsx","components/workinSpaceAlfabetos.jsx","components/operacionesAlfabetos.jsx","pages/page_alfabetos.jsx","components/formPalabra.jsx","components/listPalabras.jsx","pages/page_palabras.jsx","store.js","components/app.jsx","index.js"],"names":["Navegacion","location","className","to","src","alt","formatearAlfabeto","alfabeto","split","filter","e","vectorizarAlfabeto","imprimirAlfabetoFormateado","length","stringAlf","forEach","i","invertirPalabra","palabra","x","palabraInvertida","charAt","concatenacionLenguajes","lenguajes","lenguaje1","lenguaje2","nomLenguaje1","nameLenguaje","nomLenguaje2","y","concatenacionLenguaje","j","push","connect","state","list","listLenguajes","dispatch","agregarLenguaje","lenguaje","type","useState","namelenguaje","setNameLenguaje","setAlfabeto","handleChange","target","name","value","onSubmit","preventDefault","existe","alert","alfabetoFormateado","htmlFor","autoComplete","onChange","id","placeholder","rows","lista","elimminarLenguaje","map","elem","key","onClick","window","confirm","imprimirAlfabetoFormateadoLen","dispach","seleccion","setSeleccion","salida","setSalida","setLenguaje","leng","console","log","lenguajeInvertido","invertirLenguaje","numeroDeLenguajes","setNumeroDeLenguajes","nombresDeLenguajesSeleccionados","setNombresDeLenguajesSeleccionados","useEffect","mostrarBarrasDeSeleccion","trabajandoSalida","vecls","elemento","l","union","Set","uniondelenguajes","vector","nombresLenguajesSeleccionados","document","getElementById","seleccionesCompletas","potencia","setPotencia","min","potenciaLenguajeRecursiva","alf","resultadoParcial","alfabetos","concatenacionEspecialAlfabetos","interseccionLenguaje","flag","interseccionLenguajes","diferenciaLenguaje","diferenciaLenguajes2","operacionSeleccionada","operacionLenguaje","espacioDeOperaciones","actualizarOperacionLenguaje","nuevaOperacion","handleClick","classList","add","querySelectorAll","contains","remove","listAlfabetos","agregarAlfabeto","nameAlfabeto","setNameAlfabeto","simbolos","setSimbolos","simbolosFormateado","eliminarAlfabeto","imprimirSimbolosFormateado","numeroDeAlfabetos","setNumeroDeAlfabetos","nombresDeAlfabetosSeleccionados","setNombresDeAlfabetosSeleccionados","uniondealfabetos","a","nombresAlfabetosSeleccionados","alfabeto1","alfabeto2","diferenciaAlfabeto","diferenciaAlfabetos","interseccionAlfabetos","operacionAlfabeto","actualizarOperacionAlfabeto","palabras","listPalabras","agregarPalabra","setPalabra","centrarFormulario","palSinEsp","p","eliminarPalabra","class","scope","Page_palabras","initialState","createStore","action","concat","App","store","Store","exact","path","component","Page_lenguajes","Page_alfabetos","render"],"mappings":"2RAmDeA,EAhDI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAiCjB,OACI,yBAAKC,UAAU,yDACX,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CAAMA,UAAU,iBAAiBC,GAAG,KAChC,yBAAKC,IAAI,gEAAgEC,IAAI,UAEjF,kBAAC,IAAD,CAAMH,UAAU,oBAAoBC,GAAG,KAAvC,iCAEJ,yBAAKD,UAAU,mBAtCH,kBAAbD,EAEK,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMC,UAAU,6BAA6BC,GAAG,KAAhD,aACA,kBAAC,IAAD,CAAMD,UAAU,oBAAoBC,GAAG,cAAvC,aACA,kBAAC,IAAD,CAAMD,UAAU,oBAAoBC,GAAG,aAAvC,aAII,kBAAbF,EAEK,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMC,UAAU,oBAAoBC,GAAG,KAAvC,aACA,kBAAC,IAAD,CAAMD,UAAU,6BAA6BC,GAAG,cAAhD,aACA,kBAAC,IAAD,CAAMD,UAAU,oBAAoBC,GAAG,aAAvC,aAII,iBAAbF,EAEK,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMC,UAAU,oBAAoBC,GAAG,KAAvC,aACA,kBAAC,IAAD,CAAMD,UAAU,oBAAoBC,GAAG,cAAvC,aACA,kBAAC,IAAD,CAAMD,UAAU,6BAA6BC,GAAG,aAAhD,kBALZ,K,sBCnBKG,EAAoB,SAACC,GAE9B,OAP8B,SAACA,GAE/B,OADuBA,EAASC,MAAM,KAChBC,QAAQ,SAAAC,GAAC,MAAU,KAANA,KAInBC,CAAmBJ,IAI1BK,EAA6B,SAACL,GAEvC,GAAuB,IAApBA,EAASM,OAAa,CACrB,IAAIC,EAAY,KAShB,OARAP,EAASQ,SAAQ,SAACL,EAAEM,GAEZF,EADDP,EAASM,OAAO,IAAMG,EACTF,EAAYJ,EAAI,KAGhBI,EAAYJ,EAAI,QAG7BI,IAkDFG,EAAkB,SAACC,GAG5B,IAFA,IAAIC,EAAID,EAAQL,OACZO,EAAmB,GAChBD,GAAG,GACRC,GAAsCF,EAAQG,OAAOF,GACrDA,IAEF,OAAOC,GAsHEE,EAAyB,SAACC,GAcnC,IAbA,IAAIC,EAAWD,EAAU,GAAGhB,SACxBkB,EAAWF,EAAU,GAAGhB,SACxBmB,EAAeH,EAAU,GAAGI,aAC5BC,EAAeL,EAAU,GAAGI,aAE5BR,EAAIK,EAAUX,OACdgB,EAAIJ,EAAUZ,OAEdiB,EAAwB,GAKnBd,EAAI,EAAGA,EAAIG,EAAGH,IACnB,IAAK,IAAIe,EAAI,EAAGA,EAAIF,EAAGE,IAAI,CAOvB,GANkB,mBAAfL,GACCI,EAAsBE,KAAKP,EAAUM,IAEvB,mBAAfH,GACCE,EAAsBE,KAAKR,EAAUR,IAEvB,UAAfU,GAAwC,UAAfE,EACxB,MAAO,CAAC,UAEK,kBAAdF,GAAgD,kBAAdE,GAAgD,SAAdF,GAAuC,SAAdE,IAC1E,WAAfJ,EAAUR,IACTc,EAAsBE,KAAKP,EAAUM,IACtB,WAAfN,EAAUM,IACVD,EAAsBE,KAAKR,EAAUR,IAExB,UAAdQ,EAAUR,IAAwB,UAAdS,EAAUM,IAC7BD,EAAsBE,KAAKR,EAAUR,GAAGS,EAAUM,KAKlE,OAAOD,GCjJIG,eAfS,SAAAC,GAAK,MAAK,CAC9BC,KAAMD,EAAME,kBAGW,SAAAC,GAAQ,MAAK,CAEpCC,gBAFoC,SAEpBC,GACZF,EAAS,CACLG,KAAM,mBACND,iBAMGN,EApFM,SAAC,GAA4B,IAA3BE,EAA0B,EAA1BA,KAAKG,EAAqB,EAArBA,gBAAqB,EAENG,mBAAS,IAFH,mBAEtCC,EAFsC,KAEzBC,EAFyB,OAGdF,mBAAS,IAHK,mBAGtClC,EAHsC,KAG7BqC,EAH6B,KAKvCC,EAAe,SAAAnC,GACI,iBAAlBA,EAAEoC,OAAOC,MAAyBJ,EAAgBjC,EAAEoC,OAAOE,OACzC,aAAlBtC,EAAEoC,OAAOC,MAAqBH,EAAYlC,EAAEoC,OAAOE,QAmC1D,OACI,yBAAK9C,UAAU,YACX,yBAAKA,UAAU,+BAEX,wBAAIA,UAAU,eAAd,YAEA,0BAAM+C,SAtCG,SAAAvC,GACjBA,EAAEwC,iBAEF,IAAIC,GAAS,EAOb,GALAhB,EAAKpB,SAAQ,SAAAL,GACT,GAAGA,EAAEiB,eAAiBe,EAAc,OAAOS,GAAO,KAIlC,KAAjBT,GAAoC,KAAbnC,EAEtB,GAAG4C,EACCC,MAAM,0FAEN,CACA,IAAIC,EAAqB/C,EAAkBC,GAM3C+B,EALe,CACXX,aAAce,EACdnC,SAAU8C,IAIdV,EAAgB,IAChBC,EAAY,SAIhBQ,MAAM,0CAU4BlD,UAAU,QAEpC,yBAAKA,UAAU,cACX,2BAAOA,UAAU,WAAWoD,QAAQ,gBAApC,uBACA,2BAAOC,aAAa,MAAMP,MAAON,EAAcc,SAAUX,EAAcL,KAAK,OAAOO,KAAK,eAAe7C,UAAU,eAAeuD,GAAG,eAAeC,YAAY,iBAGlK,yBAAKxD,UAAU,cACX,2BAAOA,UAAU,WAAWoD,QAAQ,cAApC,uBAAqE,0DAArE,KACA,8BAAUN,MAAOzC,EAAUiD,SAAUX,EAAc3C,UAAU,eAAe6C,KAAK,WAAWY,KAAK,IAAIF,GAAG,aAAaC,YAAY,2BAErI,4BAAQxD,UAAU,qCAAlB,0BCSL+B,eAfS,SAAAC,GAAK,MAAK,CAC9B0B,MAAO1B,EAAME,kBAGU,SAAAC,GAAQ,MAAK,CAEpCwB,kBAFoC,SAElBtB,GACdF,EAAS,CACLG,KAAM,oBACND,iBAMGN,EAnEM,SAAC,GAA+B,IAA9B2B,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,kBAqCzB,OACI,yBAAK3D,UAAU,YACX,yBAAKA,UAAU,wBACX,wBAAIA,UAAU,eAAd,iBArCY,IAAjB0D,EAAM/C,OACE,yBAAKX,UAAU,aAClB,yBAAKE,IAAI,8DAA8DC,IAAI,SAC3E,mEAIGuD,EAAME,KAAI,SAACC,EAAK/C,GAAN,OACb,yBAAKgD,IAAKhD,EAAGd,UAAU,aACnB,yBAAKA,UAAU,YACX,4BAAK6D,EAAKpC,cACV,4BAAQsC,QACJ,WAC6B,UAAtBF,EAAKpC,cAAkD,mBAAtBoC,EAAKpC,aACrCyB,MAAM,mGAGHc,OAAOC,QAAP,yDAA8DJ,EAAKpC,aAAnE,qBACHkC,EAAkBE,KAP9B,MAYJ,yBAAK7D,UAAU,gBAAf,iBF8Ba,WADQqC,EE7BiDwB,GF8B1EpC,aACD,EAEJY,EAAShC,SAASM,QEhCT,yBAAKX,UAAU,aACX,yBAAKA,UAAU,YACX,2BFTiB,SAACqC,GAC1C,GAA6B,UAA1BA,EAASZ,aACR,OAAOY,EAAShC,SAAS,GAGzB,GAAgC,IAA7BgC,EAAShC,SAASM,OAAa,CAC9B,IAAIC,EAAY,KAShB,OARAyB,EAAShC,SAASQ,SAAQ,SAACL,EAAEM,GAErBF,EADDyB,EAAShC,SAASM,OAAO,IAAMG,EAClBF,EAAYJ,EAAI,KAGhBI,EAAYJ,EAAI,QAG7BI,GENasD,CAA8BL,OF0BtB,IAACxB,UGmB1BN,G,MAAAA,aANS,SAAAC,GAAK,MAAK,CAC9BX,UAAWW,EAAME,kBAGM,SAAAiC,GAAO,MAAK,KAExBpC,EA5EW,SAAC,GAAiB,IAAhBV,EAAe,EAAfA,UAAe,EAENkB,mBAAS,gBAFH,mBAEhC6B,EAFgC,KAEtBC,EAFsB,OAGZ9B,mBAAS,IAHG,mBAGhC+B,EAHgC,KAGzBC,EAHyB,OAIRhC,mBAAS,CAACd,aAAc,GAAGpB,SAAS,KAJ5B,mBAIhCgC,EAJgC,KAIvBmC,EAJuB,KAuCvC,OACI,yBAAKxE,UAAU,iCACX,sDACA,0BAAMA,UAAU,mDAER,yBAAKA,UAAU,yBACX,2BAAOoD,QAAQ,wBAAf,0BACA,4BAAQE,SAxCP,SAAA9C,GAEjB,GAAsB,iBAAnBA,EAAEoC,OAAOE,MAAyB,CAEjCyB,EAAU,IAEV,IAAItD,EAAIT,EAAEoC,OAAOE,MACb2B,EAAOpD,EAAUd,QAAO,SAAAC,GAAC,OAAIA,EAAEiB,eAAiBR,KACpDuD,EAAYC,EAAK,SAGjBF,EAAU,IACVC,EAAY,CAAC/C,aAAc,GAAGpB,SAAS,KAE3CgE,EAAa7D,EAAEoC,OAAOE,QA0B0BA,MAAOsB,EAAWpE,UAAU,eAAeuD,GAAG,wBAC1E,gDACClC,EAAUuC,KAAI,SAAApD,GAAC,OAAI,4BAAQsD,IAAKtD,EAAEiB,cAAgBjB,EAAEiB,mBAIjE,yBAAKzB,UAAU,YACX,4BAAQ+D,QA9BJ,SAAAvD,GAGhB,GAFAA,EAAEwC,iBACF0B,QAAQC,IAAIP,GACK,iBAAdA,EAA6B,CAC5B,IAGIQ,EHgDgB,SAACvC,GAK7B,IAJA,IAAIpB,EAAIoB,EAAS1B,OACbiE,EAAoB,GAGf9D,EAAI,EAAGA,EAAIG,EAAGH,IAEnB8D,EAAkB9C,KAAKf,EAAgBsB,EAASvB,KAEpD,OAAO8D,EGzDyBC,CAHTxD,EAAUd,QAAO,SAAAC,GAAC,OAAIA,EAAEiB,eAAiB2C,KAGN,GAAG/D,UAErDkE,EAAUK,QAGV1B,MAAM,sGAkBgClD,UAAU,yBAAxC,QAGR,yBAAKA,UAAU,UAEX,kBAAC,WAAD,KACI,2BAAIU,EAA2B2B,EAAShC,WACxC,kCACA,2BAAIK,EAA2B4D,WCqEpCvC,eANS,SAAAC,GAAK,MAAK,CAC9BX,UAAWW,EAAME,kBAGM,SAAAiC,GAAO,MAAK,KAExBpC,EAjIQ,SAAC,GAAiB,IAAhBV,EAAe,EAAfA,UAAe,EAEakB,mBAAS,GAFtB,mBAE7BuC,EAF6B,KAEXC,EAFW,OAGyCxC,mBAAS,IAHlD,mBAG7ByC,EAH6B,KAGGC,EAHH,OAIT1C,mBAAS,IAJA,mBAI7B+B,EAJ6B,KAItBC,EAJsB,KAMpCW,qBAAU,WACNC,MACF,CAACL,IAEHI,qBAAU,WAENE,MACF,CAACJ,IAEH,IAAMI,EAAmB,WAErB,GAA8C,IAA3CJ,EAAgCrE,OAAa,CAG5C,IADA,IAAI0E,EAAQ,GAFgC,WAGpCvE,GACJ,IAAIwE,EAAWjE,EAAUd,QAAQ,SAAAC,GAAC,OAAIA,EAAEiB,eAAiBuD,EAAgClE,MACzFuE,EAAMvD,KAAKwD,EAAS,KAFhBxE,EAAE,EAAIA,EAAIkE,EAAgCrE,OAASG,IAAK,EAAxDA,GAKRyD,EJ2FoB,SAAClD,GAG7B,IAFA,IAAIkE,EAAIlE,EAAUV,OACd6E,EAAQ,GACJ1E,EAAI,EAAGA,EAAIyE,EAAGzE,IAAI,CACtB,IAAIuB,EAAWhB,EAAUP,GAAGT,SACxBY,EAAIoB,EAAS1B,OACjB,GAAiC,UAA9BU,EAAUP,GAAGW,aACZ,IAAI,IAAII,EAAI,EAAGA,EAAIZ,EAAGY,IAClB2D,EAAM1D,KAAKO,EAASR,IAKhC,OADA2D,EAAK,YAAO,IAAIC,IAAID,IIvGFE,CAAiBL,MAgD7BF,EAA2B,WAG7B,IADA,IAAIQ,EAAS,GACJ7E,EAAE,EAAIA,EAAIgE,EAAoBhE,IAAK6E,EAAO7D,KAAK,KAExD,OAAO6D,EAAO/B,KAAI,SAACpD,EAAEM,GAAH,OACd,yBAAKgD,IAAKhD,EAAE,EAAGd,UAAU,OACrB,2BAAOoD,QAAO,kBAAatC,EAAE,EAAf,OAAd,oCAA+DA,EAAE,IACjE,4BAAQyC,GAAE,kBAAazC,EAAE,EAAf,MAAsBd,UAAU,gBACtC,+CACCqB,EAAUuC,KAAI,SAAApD,GAAC,OAAI,4BAAQsD,IAAKtD,EAAEiB,cAAejB,EAAEiB,uBAQpE,OACI,yBAAKzB,UAAU,+BACX,qDAEA,0BAAM+C,SAvDO,SAAAvC,GAEjBA,EAAEwC,iBAMF,IADA,IAAI4C,EAAgC,GAC3B9E,EAAE,EAAIA,EAAIgE,EAAoBhE,IAAK,CACxC,IAAIwE,EAAWO,SAASC,eAAT,kBAAmChF,EAAE,EAArC,OACA,MAAZwE,EACCM,EAA8B9D,KAAKwD,EAASxC,OAE3C4B,QAAQC,IAAI,4BAGrBD,QAAQC,IAAIiB,GAGZ,IADA,IAAIG,GAAuB,EACnBjF,EAAE,EAAIA,EAAI8E,EAA8BjF,OAASG,IACb,gBAArC8E,EAA8B9E,KAC7BiF,GAAuB,GAI/BrB,QAAQC,IAAIoB,GACTA,EACCd,EAAmCW,GAElC1C,MAAM,yJA2BH,yBAAKlD,UAAU,kBACX,yBAAKA,UAAU,OACX,2BAAOoD,QAAQ,mBAAf,uBACA,4BAAQE,SAtEP,SAAA9C,GACdA,EAAEoC,OAAOE,OAAS,EAEjBiC,EAAqBvE,EAAEoC,OAAOE,OAI9BiC,EAAqB,IA+DuBxB,GAAG,kBAAkBT,MAAOgC,EAAmB9E,UAAU,gBACrF,qCACCqB,EAAUuC,KAAI,SAACpD,EAAEM,GAAO,GAAGA,GAAG,EAAG,OAAO,4BAAQgD,IAAKhD,GAAIA,EAAE,SAKxE,yBAAKd,UAAU,kBACVmF,KAGL,yBAAKnF,UAAU,YACX,4BAAQA,UAAU,mCAAlB,QAIR,yBAAKA,UAAU,UACX,2BAAIU,EAA2B4D,SCJhCvC,eANS,SAAAC,GAAK,MAAK,CAC9BX,UAAWW,EAAME,kBAGM,SAAAiC,GAAO,MAAK,KAExBpC,EAhHU,SAAC,GAAiB,IAAhBV,EAAe,EAAfA,UAAe,EAELkB,mBAAS,gBAFJ,mBAE/B6B,EAF+B,KAErBC,EAFqB,OAGP9B,mBAAS,GAHF,mBAG/ByD,EAH+B,KAGtBC,EAHsB,OAIX1D,mBAAS,IAJE,mBAI/B+B,EAJ+B,KAIxBC,EAJwB,OAKPhC,mBAAS,CAACd,aAAc,GAAGpB,SAAS,KAL7B,mBAK/BgC,EAL+B,KAKtBmC,EALsB,KAOhC7B,EAAe,SAAAnC,GAGjB,GAAmB,yBAAhBA,EAAEoC,OAAOW,GAA8B,CACtC,GAAsB,iBAAnB/C,EAAEoC,OAAOE,MAAyB,CAErCyB,EAAU,IAEV,IAAItD,EAAIT,EAAEoC,OAAOE,MACb2B,EAAOpD,EAAUd,QAAO,SAAAC,GAAC,OAAIA,EAAEiB,eAAiBR,KACpDuD,EAAYC,EAAK,SAGbF,EAAU,IACVC,EAAY,CAAC/C,aAAc,GAAGpB,SAAS,KAE3CgE,EAAa7D,EAAEoC,OAAOE,OAGP,aAAhBtC,EAAEoC,OAAOW,IACR0C,EAAYzF,EAAEoC,OAAOE,QAiD7B,OACI,yBAAK9C,UAAU,iCACX,uDACA,0BAAMA,UAAU,mDAER,yBAAKA,UAAU,yBACX,2BAAOoD,QAAQ,wBAAf,0BACA,4BAAQE,SAAUX,EAAcG,MAAOsB,EAAWpE,UAAU,eAAeuD,GAAG,wBAC1E,gDACClC,EAAUuC,KAAI,SAAApD,GAAC,OAAI,4BAAQsD,IAAKtD,EAAEiB,cAAejB,EAAEiB,kBAExD,yBAAKzB,UAAU,OACX,2BAAOuD,GAAG,WAAW2C,IAAI,IAAI5C,SAAUX,EAAcG,MAAOkD,EAAU1D,KAAK,SAAStC,UAAU,eAAewD,YAAY,eAIrI,yBAAKxD,UAAU,YACX,4BAAQ+D,QA9DJ,SAAAvD,GAChBA,EAAEwC,iBAEe,iBAAdoB,EAC8B,UAA1B/B,EAASZ,aACqB,mBAA1BY,EAASZ,aACO,GAAZuE,EACCzB,EAAU,CAAC,WAGRyB,GAAY,GACXtB,QAAQC,IAAItC,GAEZkC,EL8Sa,SAA5B4B,EAA6B9F,EAAS2F,GAC/C,IAAMI,EAAM/F,EACRgG,EAAmB,GAQvB,OAPAA,EAAmBhG,EAEfgG,EADW,GAAZL,EACoB3F,EAnBY,SAACiG,GAMpC,IALA,IAAIhF,EAAWgF,EAAU,GACrB/E,EAAW+E,EAAU,GACrBrF,EAAIK,EAAUX,OACdgB,EAAIJ,EAAUZ,OACdiB,EAAwB,GACnBd,EAAI,EAAGA,EAAIG,EAAGH,IACnB,IAAK,IAAIe,EAAI,EAAGA,EAAIF,EAAGE,IACfD,EAAsBE,KAAKR,EAAUR,GAAGS,EAAUM,IAG9D,OAAOD,EAWgB2E,CAA+B,CAACJ,EAA0BE,EAAiBL,EAAS,GAAGI,IKtT5ED,CAA0B9D,EAAShC,SAAS2F,KAGtD9C,MAAM,wDAKdqB,EAAU,CAAC,WAIfA,EAAU,CAAC,WAIfrB,MAAM,2GAiCgClD,UAAU,yBAAxC,QAGR,yBAAKA,UAAU,UACX,uBAAGA,UAAU,OAhCJ,WAAdsE,EAAO,IAA4B,WAAdA,EAAO,GACpB5D,EAA2B4D,GAErB,WAAdA,EAAO,GACC,SAEM,WAAdA,EAAO,GACC,gBADX,QCqCOvC,eANS,SAAAC,GAAK,MAAK,CAC9BX,UAAWW,EAAME,kBAGM,SAAAiC,GAAO,MAAK,KAExBpC,EA5GgB,SAAC,GAAiB,IAAhBV,EAAe,EAAfA,UAAe,EAEiCkB,mBAAS,IAF1C,mBAErCyC,EAFqC,KAELC,EAFK,OAGjB1C,mBAAS,IAHQ,mBAGrC+B,EAHqC,KAG9BC,EAH8B,KAK5CW,qBAAU,WAENE,MACF,CAACJ,IAEH,IAAMI,EAAmB,WAErB,GAA8C,IAA3CJ,EAAgCrE,OAAa,CAG5C,IADA,IAAI0E,EAAQ,GAFgC,WAGpCvE,GACJ,IAAIwE,EAAWjE,EAAUd,QAAQ,SAAAC,GAAC,OAAIA,EAAEiB,eAAiBuD,EAAgClE,MACzFuE,EAAMvD,KAAKwD,EAAS,KAFhBxE,EAAE,EAAIA,EAAIkE,EAAgCrE,OAASG,IAAK,EAAxDA,GAKRyD,EAAUnD,EAAuBiE,MA2DzC,OACI,yBAAKrF,UAAU,+BACX,gEAEA,0BAAM+C,SA3DO,SAAAvC,GACjBA,EAAEwC,iBAGF,IADA,IAAI4C,EAAgC,GAC3B9E,EAAE,EAAIA,EAAI,EAAIA,IAAK,CACxB,IAAIwE,EAAWO,SAASC,eAAT,kBAAmChF,EAAE,IACrC,MAAZwE,EACCM,EAA8B9D,KAAKwD,EAASxC,OAE3C4B,QAAQC,IAAI,4BAGrBD,QAAQC,IAAIiB,GAC4B,gBAArCA,EAA8B,GACW,gBAArCA,EAA8B,GAC7BX,EAAmCW,GAGnC1C,MAAM,iIAIVA,MAAM,mIAuCF,yBAAKlD,UAAU,sBAlCM,WAG7B,IADA,IAAI2F,EAAS,GACJ7E,EAAE,EAAIA,EAAI,EAAIA,IAAK6E,EAAO7D,KAAK,KAExC,OAAO6D,EAAO/B,KAAI,SAACpD,EAAEM,GAAH,OACd,yBAAKgD,IAAKhD,EAAE,EAAGd,UAAU,OACrB,2BAAOoD,QAAO,kBAAatC,EAAE,IAA7B,oCAA6DA,EAAE,IAC/D,4BAAQyC,GAAE,kBAAazC,EAAE,GAAKd,UAAU,gBACpC,+CACCqB,EAAUuC,KAAI,SAAApD,GAAC,OAAI,4BAAQsD,IAAKtD,EAAEiB,cAAejB,EAAEiB,sBAyBnD0D,IAGL,yBAAKnF,UAAU,YACX,4BAAQA,UAAU,mCAAlB,QAIR,yBAAKA,UAAU,gBACX,2BAzBS,WAAdsE,EAAO,GACC5D,EAA2B4D,GAG3B,eCuBJvC,eANS,SAAAC,GAAK,MAAK,CAC9BX,UAAWW,EAAME,kBAGM,SAAAiC,GAAO,MAAK,KAExBpC,EAjGe,SAAC,GAAiB,IAAhBV,EAAe,EAAfA,UAAe,EAEkCkB,mBAAS,IAF3C,mBAEpCyC,EAFoC,KAEJC,EAFI,OAGhB1C,mBAAS,IAHO,mBAGpC+B,EAHoC,KAG7BC,EAH6B,KAK3CW,qBAAU,WACNE,MACF,CAACJ,IAEH,IAAMI,EAAmB,WAErB,GAA8C,IAA3CJ,EAAgCrE,OAAa,CAG5C,IADA,IAAI0E,EAAQ,GAFgC,WAGpCvE,GACJ,IAAIwE,EAAWjE,EAAUd,QAAQ,SAAAC,GAAC,OAAIA,EAAEiB,eAAiBuD,EAAgClE,MACzFuE,EAAMvD,KAAKwD,EAAS,KAFhBxE,EAAE,EAAIA,EAAIkE,EAAgCrE,OAASG,IAAK,EAAxDA,GAKRyD,EP8IyB,SAAClD,GAYlC,IAXA,IAAIC,EAAWD,EAAU,GAAGhB,SACxBkB,EAAWF,EAAU,GAAGhB,SACxBY,EAAIK,EAAUX,OACdgB,EAAIJ,EAAUZ,OAEd6F,EAAuB,GACvBC,EAAM,EAKD3F,EAAI,EAAGA,EAAIG,EAAGH,IAAI,CACvB,IAAK,IAAIe,EAAI,EAAGA,EAAIF,EAAGE,IACnB,GAAIP,EAAUR,KAAOS,EAAUM,GAAG,CAC9B4E,IACA,MAGE,IAAPA,GAECD,EAAqB1E,KAAKR,EAAUR,IACpC2F,EAAK,GAELA,EAAK,EAGb,OAAOD,EOzKWE,CAAsBrB,MAiDxC,OACI,yBAAKrF,UAAU,+BACX,+DAEA,0BAAM+C,SAjDO,SAAAvC,GACjBA,EAAEwC,iBAGF,IADA,IAAI4C,EAAgC,GAC3B9E,EAAE,EAAIA,EAAI,EAAIA,IAAK,CACxB,IAAIwE,EAAWO,SAASC,eAAT,kBAAmChF,EAAE,IACrC,MAAZwE,EACCM,EAA8B9D,KAAKwD,EAASxC,OAE3C4B,QAAQC,IAAI,4BAGrBD,QAAQC,IAAIiB,GAC4B,gBAArCA,EAA8B,GACW,gBAArCA,EAA8B,GAC7BX,EAAmCW,GAGnC1C,MAAM,+HAIVA,MAAM,iIA6BF,yBAAKlD,UAAU,sBAxBM,WAG7B,IADA,IAAI2F,EAAS,GACJ7E,EAAE,EAAIA,EAAI,EAAIA,IAAK6E,EAAO7D,KAAK,KAExC,OAAO6D,EAAO/B,KAAI,SAACpD,EAAEM,GAAH,OACd,yBAAKgD,IAAKhD,EAAE,EAAGd,UAAU,OACrB,2BAAOoD,QAAO,kBAAatC,EAAE,IAA7B,oCAA6DA,EAAE,IAC/D,4BAAQyC,GAAE,kBAAazC,EAAE,GAAKd,UAAU,gBACpC,+CACCqB,EAAUuC,KAAI,SAAApD,GAAC,OAAI,4BAAQsD,IAAKtD,EAAEiB,cAAejB,EAAEiB,sBAenD0D,IAGL,yBAAKnF,UAAU,YACX,4BAAQA,UAAU,mCAAlB,QAIR,yBAAKA,UAAU,gBACX,2BAAIU,EAA2B4D,SCYhCvC,eANS,SAAAC,GAAK,MAAK,CAC9BX,UAAWW,EAAME,kBAGM,SAAAiC,GAAO,MAAK,KAExBpC,EAhGa,SAAC,GAAiB,IAAhBV,EAAe,EAAfA,UAAe,EAEoCkB,mBAAS,IAF7C,mBAElCyC,EAFkC,KAEFC,EAFE,OAGd1C,mBAAS,IAHK,mBAGlC+B,EAHkC,KAG3BC,EAH2B,KAKzCW,qBAAU,WACNE,MACF,CAACJ,IAEH,IAAMI,EAAmB,WAErB,GAA8C,IAA3CJ,EAAgCrE,OAAa,CAG5C,IADA,IAAI0E,EAAQ,GAFgC,WAGpCvE,GACJ,IAAIwE,EAAWjE,EAAUd,QAAQ,SAAAC,GAAC,OAAIA,EAAEiB,eAAiBuD,EAAgClE,MACzFuE,EAAMvD,KAAKwD,EAAS,KAFhBxE,EAAE,EAAIA,EAAIkE,EAAgCrE,OAASG,IAAK,EAAxDA,GAKRyD,ERiHwB,SAAClD,GAYjC,IAXA,IAAIC,EAAWD,EAAU,GAAGhB,SACxBkB,EAAWF,EAAU,GAAGhB,SACxBY,EAAIK,EAAUX,OACdgB,EAAIJ,EAAUZ,OAEdgG,EAAqB,GACrBF,EAAM,EAKD3F,EAAI,EAAGA,EAAIG,EAAGH,IAAI,CACvB,IAAK,IAAIe,EAAI,EAAGA,EAAIF,EAAGE,IACnB,GAAIP,EAAUR,KAAOS,EAAUM,GAAG,CAC9B4E,IACA,MAGE,IAAPA,EAECE,EAAmB7E,KAAKR,EAAUR,IAElC2F,EAAK,EAGb,OAAOE,EQ3IWC,CAAqBvB,MAgDvC,OACI,yBAAKrF,UAAU,+BACX,0DAEA,0BAAM+C,SAhDO,SAAAvC,GACjBA,EAAEwC,iBAGF,IADA,IAAI4C,EAAgC,GAC3B9E,EAAE,EAAIA,EAAI,EAAIA,IAAK,CACxB,IAAIwE,EAAWO,SAASC,eAAT,kBAAmChF,EAAE,IACrC,MAAZwE,EACCM,EAA8B9D,KAAKwD,EAASxC,OAE3C4B,QAAQC,IAAI,4BAErBD,QAAQC,IAAIiB,GAC4B,gBAArCA,EAA8B,GACW,gBAArCA,EAA8B,GAC7BX,EAAmCW,GAGnC1C,MAAM,0HAIVA,MAAM,4HA6BF,yBAAKlD,UAAU,sBAxBM,WAG7B,IADA,IAAI2F,EAAS,GACJ7E,EAAE,EAAIA,EAAI,EAAIA,IAAK6E,EAAO7D,KAAK,KAExC,OAAO6D,EAAO/B,KAAI,SAACpD,EAAEM,GAAH,OACd,yBAAKgD,IAAKhD,EAAE,EAAGd,UAAU,OACrB,2BAAOoD,QAAO,kBAAatC,EAAE,IAA7B,oCAA6DA,EAAE,IAC/D,4BAAQyC,GAAE,kBAAazC,EAAE,GAAKd,UAAU,gBACpC,+CACCqB,EAAUuC,KAAI,SAAApD,GAAC,OAAI,4BAAQsD,IAAKtD,EAAEiB,cAAejB,EAAEiB,sBAenD0D,IAGL,yBAAKnF,UAAU,YACX,4BAAQA,UAAU,mCAAlB,QAIR,yBAAKA,UAAU,gBACX,2BAAIU,EAA2B4D,SCtBhCvC,eANS,SAAAC,GAAK,MAAK,CAC9B6E,sBAAuB7E,EAAM8E,sBAGN,SAAA3C,GAAO,MAAK,KAExBpC,EAxDc,SAAC,GAA6B,IAA5B8E,EAA2B,EAA3BA,sBA2C3B,OAzC6B,WAEzB,OAAQA,GAEJ,IAAK,UACD,OAAO,kBAAC,EAAD,MAGX,IAAK,WACD,OAAO,kBAAC,EAAD,MAGX,IAAK,gBACD,OAAO,kBAAC,EAAD,MAGX,IAAK,eACD,OAAO,kBAAC,EAAD,MAGX,IAAK,aACD,OAAO,kBAAC,EAAD,MAGX,IAAK,QACD,OAAO,kBAAC,EAAD,MAGX,QACI,OAAO,yBAAK7G,UAAU,UAClB,yBAAKA,UAAU,UACX,yBAAKE,IAAI,gEAAgEC,IAAI,cAC7E,yBAAKD,IAAI,gEAAgEC,IAAI,cAEjF,+FAQZ4G,MCeOhF,eAbS,SAAAC,GAAK,MAAK,MAEP,SAAAG,GAAQ,MAAK,CAEpC6E,4BAFoC,SAERC,GACxB9E,EAAS,CACLG,KAAM,gCACN2E,uBAMGlF,EA9Dc,SAAC,GAAmC,IAAlCiF,EAAiC,EAAjCA,4BAUrBE,EAAc,SAAA1G,GAEhBwG,EAA4BxG,EAAEoC,OAAOW,IAErCsC,SAASC,eAAetF,EAAEoC,OAAOW,IAAI4D,UAAUC,IAAI,gBACnDvB,SAASwB,iBAAiB,MAAMxG,SAAQ,SAAAgD,GAEjCA,EAAKN,KAAO/C,EAAEoC,OAAOW,IAGjBM,EAAKsD,UAAUG,SAAS,iBAEvBzD,EAAKsD,UAAUI,OAAO,oBAOtC,OACI,kBAAC,WAAD,KACI,yBAAKvH,UAAU,iBACX,4BACI,wBAAIuD,GAAG,UAAUQ,QAASmD,GAA1B,0BACA,wBAAI3D,GAAG,WAAWQ,QAASmD,GAA3B,2BACA,wBAAI3D,GAAG,gBAAgBQ,QAASmD,GAAhC,iCACA,wBAAI3D,GAAG,eAAeQ,QAASmD,GAA/B,gCACA,wBAAI3D,GAAG,aAAaQ,QAASmD,GAA7B,8BACA,wBAAI3D,GAAG,QAAQQ,QAASmD,GAAxB,2BAGR,yBAAKlH,UAAU,yBACX,kBAAC,EAAD,WCUD+B,G,MAAAA,aAbS,SAAAC,GAAK,MAAK,MAEP,SAAAG,GAAQ,MAAK,CAEpC6E,4BAFoC,SAERC,GACxB9E,EAAS,CACLG,KAAM,gCACN2E,uBAMGlF,EAlDQ,SAAC,GAAmC,IAAlCiF,EAAiC,EAAjCA,4BAmBrB,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAYjH,SAAS,kBACrB,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,6BACA,wBAAIuD,GAAG,SAASQ,QA1BR,SAAAvD,GAEhBqF,SAASwB,iBAAiB,MAAMxG,SAAQ,SAAAgD,GAEjCA,EAAKN,KAAO/C,EAAEoC,OAAOW,IAGjBM,EAAKsD,UAAUG,SAAS,iBAEvBzD,EAAKsD,UAAUI,OAAO,mBAKlCP,EAA4BxG,EAAEoC,OAAOW,KAYSvD,UAAU,6BAAhD,+BACA,yBAAKA,UAAU,2BACX,kBAAC,EAAD,aCiDL+B,eAfS,SAAAC,GAAK,MAAK,CAC9BC,KAAMD,EAAMwF,kBAGW,SAAArF,GAAQ,MAAK,CAEpCsF,gBAFoC,SAEpBpH,GACZ8B,EAAS,CACLG,KAAM,mBACNjC,iBAMG0B,EAnFM,SAAC,GAA4B,IAA3BE,EAA0B,EAA1BA,KAAKwF,EAAqB,EAArBA,gBAAqB,EAENlF,mBAAS,IAFH,mBAEtCmF,EAFsC,KAEzBC,EAFyB,OAGdpF,mBAAS,IAHK,mBAGtCqF,EAHsC,KAG7BC,EAH6B,KAKvClF,EAAe,SAAAnC,GACI,iBAAlBA,EAAEoC,OAAOC,MAAyB8E,EAAgBnH,EAAEoC,OAAOE,OACzC,aAAlBtC,EAAEoC,OAAOC,MAAqBgF,EAAYrH,EAAEoC,OAAOE,QAmC1D,OACI,yBAAK9C,UAAU,YACX,yBAAKA,UAAU,+BAEX,wBAAIA,UAAU,eAAd,YAEA,0BAAM+C,SAtCG,SAAAvC,GACjBA,EAAEwC,iBAEF,IAAIC,GAAS,EAOb,GALAhB,EAAKpB,SAAQ,SAAAL,GACT,GAAGA,EAAEkH,eAAiBA,EAAc,OAAOzE,GAAO,KAIlC,KAAjByE,GAAoC,KAAbE,EAEtB,GAAG3E,EACCC,MAAM,2EAEN,CACA,IAAI4E,EAAqB1H,EAAkBwH,GAM3CH,EALe,CACXC,aAAcA,EACdE,SAAUE,IAIdH,EAAgB,IAChBE,EAAY,SAIhB3E,MAAM,0CAU4BlD,UAAU,QAEpC,yBAAKA,UAAU,cACX,2BAAOA,UAAU,WAAWoD,QAAQ,gBAApC,uBACA,2BAAOC,aAAa,MAAMP,MAAO4E,EAAcpE,SAAUX,EAAcL,KAAK,OAAOO,KAAK,eAAe7C,UAAU,eAAeuD,GAAG,eAAeC,YAAY,iBAGlK,yBAAKxD,UAAU,cACX,2BAAOA,UAAU,WAAWoD,QAAQ,cAApC,mBAAiE,0DAAjE,KACA,8BAAUN,MAAO8E,EAAUtE,SAAUX,EAAc3C,UAAU,eAAe6C,KAAK,WAAWY,KAAK,IAAIF,GAAG,aAAaC,YAAY,2BAErI,4BAAQxD,UAAU,qCAAlB,0BCFL+B,eAfS,SAAAC,GAAK,MAAK,CAC9BC,KAAMD,EAAMwF,kBAGW,SAAArF,GAAQ,MAAK,CAEpC4F,iBAFoC,SAEnB1H,GACb8B,EAAS,CACLG,KAAM,oBACNjC,iBAMG0B,EAzDO,SAAC,GAA6B,IAA5BE,EAA2B,EAA3BA,KAAK8F,EAAsB,EAAtBA,iBA6BzB,OACI,yBAAK/H,UAAU,YACX,yBAAKA,UAAU,wBACX,wBAAIA,UAAU,eAAd,kBA7BR0E,QAAQC,IAAI,iBAAiB1C,GACV,IAAhBA,EAAKtB,OACG,yBAAKX,UAAU,aAClB,yBAAKE,IAAI,8DAA8DC,IAAI,SAC3E,mEAIG8B,EAAK2B,KAAI,SAACC,EAAK/C,GAAN,OACZ,yBAAKgD,IAAKhD,EAAGd,UAAU,aACnB,yBAAKA,UAAU,YACX,wBAAIA,UAAU,OAAO6D,EAAK6D,cAC1B,4BAAQ3D,QACJ,WAAUC,OAAOC,QAAP,yDAA8DJ,EAAK6D,aAAnE,qBAAmGK,EAAiBlE,KADlI,MAIJ,yBAAK7D,UAAU,aACX,yBAAKA,UAAU,YACX,2BboBc,SAACK,GACvC,GAAgC,IAA7BA,EAASuH,SAASjH,OAAa,CAC9B,IAAIC,EAAY,KAShB,OARAP,EAASuH,SAAS/G,SAAQ,SAACL,EAAEM,GAErBF,EADDP,EAASuH,SAASjH,OAAO,IAAMG,EAClBF,EAAYJ,EAAI,KAGhBI,EAAYJ,EAAI,QAG7BI,Ga/BiBoH,CAA2BnE,gBC4G5C9B,eANS,SAAAC,GAAK,MAAK,CAC9BsE,UAAWtE,EAAMwF,kBAGM,SAAArD,GAAO,MAAK,KAExBpC,EAjIQ,SAAC,GAAiB,IAAhBuE,EAAe,EAAfA,UAAe,EAEa/D,mBAAS,GAFtB,mBAE7B0F,EAF6B,KAEXC,EAFW,OAGyC3F,mBAAS,IAHlD,mBAG7B4F,EAH6B,KAGGC,EAHH,OAIT7F,mBAAS,IAJA,mBAI7B+B,EAJ6B,KAItBC,EAJsB,KAMpCW,qBAAU,WACNC,MACF,CAAC8C,IAEH/C,qBAAU,WAENE,MACF,CAAC+C,IAEH,IAAM/C,EAAmB,WAErB,GAA8C,IAA3C+C,EAAgCxH,OAAa,CAG5C,IADA,IAAI0E,EAAQ,GAFgC,WAGpCvE,GACJ,IAAIwE,EAAWgB,EAAU/F,QAAQ,SAAAC,GAAC,OAAIA,EAAEkH,eAAiBS,EAAgCrH,MACzFuE,EAAMvD,KAAKwD,EAAS,KAFhBxE,EAAE,EAAIA,EAAIqH,EAAgCxH,OAASG,IAAK,EAAxDA,GAKRyD,Ed0QoB,SAAC+B,GAG7B,IAFA,IAAIf,EAAIe,EAAU3F,OACd6E,EAAQ,GACJ1E,EAAI,EAAGA,EAAIyE,EAAGzE,IAAK,CACvB,IAAIT,EAAWiG,EAAUxF,GAAG8G,SACxB3G,EAAIZ,EAASM,OACjB,GAAiC,UAA9B2F,EAAUxF,GAAG4G,aACZ,IAAI,IAAI7F,EAAI,EAAGA,EAAIZ,EAAGY,IAClB2D,EAAM1D,KAAKzB,EAASwB,IAKhC,OADA2D,EAAK,YAAO,IAAIC,IAAID,IctRF6C,CAAiBhD,MAgD7BF,EAA2B,WAG7B,IADA,IAAIQ,EAAS,GACJ7E,EAAE,EAAIA,EAAImH,EAAoBnH,IAAK6E,EAAO7D,KAAK,KAExD,OAAO6D,EAAO/B,KAAI,SAACpD,EAAEM,GAAH,OACd,yBAAKgD,IAAKhD,EAAE,EAAGd,UAAU,OACrB,2BAAOoD,QAAO,kBAAatC,EAAE,IAA7B,oCAA6DA,EAAE,IAC/D,4BAAQyC,GAAE,kBAAazC,EAAE,GAAKd,UAAU,gBACpC,+CACCsG,EAAU1C,KAAI,SAAA0E,GAAC,OAAI,4BAAQxE,IAAKwE,EAAEZ,cAAeY,EAAEZ,uBAQpE,OACI,yBAAK1H,UAAU,+BACX,qDAEA,0BAAM+C,SAvDO,SAAAvC,GAEjBA,EAAEwC,iBAMF,IADA,IAAIuF,EAAgC,GAC3BzH,EAAE,EAAIA,EAAImH,EAAoBnH,IAAK,CACxC,IAAIwE,EAAWO,SAASC,eAAT,kBAAmChF,EAAE,IACrC,MAAZwE,EACCiD,EAA8BzG,KAAKwD,EAASxC,OAE3C4B,QAAQC,IAAI,4BAGrBD,QAAQC,IAAI4D,GAGZ,IADA,IAAIxC,GAAuB,EACnBjF,EAAE,EAAIA,EAAIyH,EAA8B5H,OAASG,IACb,gBAArCyH,EAA8BzH,KAC7BiF,GAAuB,GAI/BrB,QAAQC,IAAIoB,GACTA,EACCqC,EAAmCG,GAElCrF,MAAM,yJA2BH,yBAAKlD,UAAU,kBACX,yBAAKA,UAAU,OACX,2BAAOoD,QAAQ,mBAAf,uBACA,4BAAQE,SAtEP,SAAA9C,GACdA,EAAEoC,OAAOE,OAAS,EAEjBoF,EAAqB1H,EAAEoC,OAAOE,OAI9BoF,EAAqB,IA+DuB3E,GAAG,kBAAkBT,MAAOmF,EAAmBjI,UAAU,gBACrF,qCACCsG,EAAU1C,KAAI,SAACpD,EAAEM,GAAO,GAAGA,GAAG,EAAG,OAAO,4BAAQgD,IAAKhD,GAAIA,EAAE,SAKxE,yBAAKd,UAAU,kBACVmF,KAGL,yBAAKnF,UAAU,YACX,4BAAQA,UAAU,mCAAlB,QAIR,yBAAKA,UAAU,UACX,2BAAIU,EAA2B4D,SCpBhCvC,eANS,SAAAC,GAAK,MAAK,CAC9BsE,UAAWtE,EAAMwF,kBAGM,SAAArD,GAAO,MAAK,KAExBpC,EAhGa,SAAC,GAAiB,IAAhBuE,EAAe,EAAfA,UAAe,EAEoC/D,mBAAS,IAF7C,mBAElC4F,EAFkC,KAEFC,EAFE,OAGd7F,mBAAS,IAHK,mBAGlC+B,EAHkC,KAG3BC,EAH2B,KAKzCW,qBAAU,WACNE,MACF,CAAC+C,IAEH,IAAM/C,EAAmB,WAErB,GAA8C,IAA3C+C,EAAgCxH,OAAa,CAG5C,IADA,IAAI0E,EAAQ,GAFgC,WAGpCvE,GACJ,IAAIwE,EAAWgB,EAAU/F,QAAQ,SAAAC,GAAC,OAAIA,EAAEkH,eAAiBS,EAAgCrH,MACzFuE,EAAMvD,KAAKwD,EAAS,KAFhBxE,EAAE,EAAIA,EAAIqH,EAAgCxH,OAASG,IAAK,EAAxDA,GAKRyD,EfqNuB,SAAC+B,GAYhC,IAXA,IAAIkC,EAAWlC,EAAU,GAAGsB,SACxBa,EAAWnC,EAAU,GAAGsB,SACxB3G,EAAIuH,EAAU7H,OACdgB,EAAI8G,EAAU9H,OAEd+H,EAAqB,GACrBjC,EAAM,EAKD3F,EAAI,EAAGA,EAAIG,EAAGH,IAAI,CACvB,IAAK,IAAIe,EAAI,EAAGA,EAAIF,EAAGE,IACnB,GAAI2G,EAAU1H,KAAO2H,EAAU5G,GAAG,CAC9B4E,IACA,MAGE,IAAPA,EAECiC,EAAmB5G,KAAK0G,EAAU1H,IAElC2F,EAAK,EAGb,OAAOiC,Ee/OWC,CAAoBtD,MAgDtC,OACI,yBAAKrF,UAAU,+BACX,0DAEA,0BAAM+C,SAhDO,SAAAvC,GACjBA,EAAEwC,iBAGF,IADA,IAAIuF,EAAgC,GAC3BzH,EAAE,EAAIA,EAAI,EAAIA,IAAK,CACxB,IAAIwE,EAAWO,SAASC,eAAT,kBAAmChF,EAAE,IACrC,MAAZwE,EACCiD,EAA8BzG,KAAKwD,EAASxC,OAE3C4B,QAAQC,IAAI,4BAErBD,QAAQC,IAAI4D,GAC4B,gBAArCA,EAA8B,GACW,gBAArCA,EAA8B,GAC7BH,EAAmCG,GAGnCrF,MAAM,0HAIVA,MAAM,4HA6BF,yBAAKlD,UAAU,sBAxBM,WAG7B,IADA,IAAI2F,EAAS,GACJ7E,EAAE,EAAIA,EAAI,EAAIA,IAAK6E,EAAO7D,KAAK,KAExC,OAAO6D,EAAO/B,KAAI,SAACpD,EAAEM,GAAH,OACd,yBAAKgD,IAAKhD,EAAE,EAAGd,UAAU,OACrB,2BAAOoD,QAAO,kBAAatC,EAAE,IAA7B,oCAA6DA,EAAE,IAC/D,4BAAQyC,GAAE,kBAAazC,EAAE,GAAKd,UAAU,gBACpC,+CACCsG,EAAU1C,KAAI,SAAA0E,GAAC,OAAI,4BAAQxE,IAAKwE,EAAEZ,cAAeY,EAAEZ,sBAenDvC,IAGL,yBAAKnF,UAAU,YACX,4BAAQA,UAAU,mCAAlB,QAIR,yBAAKA,UAAU,gBACX,2BAAIU,EAA2B4D,SCahCvC,eANS,SAAAC,GAAK,MAAK,CAC9BsE,UAAWtE,EAAMwF,kBAGM,SAAArD,GAAO,MAAK,KAExBpC,EAhGe,SAAC,GAAiB,IAAhBuE,EAAe,EAAfA,UAAe,EAEkC/D,mBAAS,IAF3C,mBAEpC4F,EAFoC,KAEJC,EAFI,OAGhB7F,mBAAS,IAHO,mBAGpC+B,EAHoC,KAG7BC,EAH6B,KAK3CW,qBAAU,WACNE,MACF,CAAC+C,IAEH,IAAM/C,EAAmB,WAErB,GAA8C,IAA3C+C,EAAgCxH,OAAa,CAG5C,IADA,IAAI0E,EAAQ,GAFgC,WAGpCvE,GACJ,IAAIwE,EAAWgB,EAAU/F,QAAQ,SAAAC,GAAC,OAAIA,EAAEkH,eAAiBS,EAAgCrH,MACzFuE,EAAMvD,KAAKwD,EAAS,KAFhBxE,EAAE,EAAIA,EAAIqH,EAAgCxH,OAASG,IAAK,EAAxDA,GAKRyD,EhBkPyB,SAAC+B,GAYlC,IAXA,IAAIkC,EAAWlC,EAAU,GAAGsB,SACxBa,EAAWnC,EAAU,GAAGsB,SACxB3G,EAAIuH,EAAU7H,OACdgB,EAAI8G,EAAU9H,OAEdiI,EAAwB,GACxBnC,EAAM,EAKD3F,EAAI,EAAGA,EAAIG,EAAGH,IAAI,CACvB,IAAK,IAAIe,EAAI,EAAGA,EAAIF,EAAGE,IACnB,GAAI2G,EAAU1H,KAAO2H,EAAU5G,GAAG,CAC9B4E,IACA,MAGE,IAAPA,GAECmC,EAAsB9G,KAAK0G,EAAU1H,IACrC2F,EAAK,GAELA,EAAK,EAGb,OAAOmC,EgB7QWA,CAAsBvD,MAgDxC,OACI,yBAAKrF,UAAU,+BACX,+DAEA,0BAAM+C,SAhDO,SAAAvC,GACjBA,EAAEwC,iBAGF,IADA,IAAIuF,EAAgC,GAC3BzH,EAAE,EAAIA,EAAI,EAAIA,IAAK,CACxB,IAAIwE,EAAWO,SAASC,eAAT,kBAAmChF,EAAE,IACrC,MAAZwE,EACCiD,EAA8BzG,KAAKwD,EAASxC,OAE3C4B,QAAQC,IAAI,4BAErBD,QAAQC,IAAI4D,GAC4B,gBAArCA,EAA8B,GACW,gBAArCA,EAA8B,GAC7BH,EAAmCG,GAGnCrF,MAAM,+HAIVA,MAAM,iIA6BF,yBAAKlD,UAAU,sBAxBM,WAG7B,IADA,IAAI2F,EAAS,GACJ7E,EAAE,EAAIA,EAAI,EAAIA,IAAK6E,EAAO7D,KAAK,KAExC,OAAO6D,EAAO/B,KAAI,SAACpD,EAAEM,GAAH,OACd,yBAAKgD,IAAKhD,EAAE,EAAGd,UAAU,OACrB,2BAAOoD,QAAO,kBAAatC,EAAE,IAA7B,oCAA6DA,EAAE,IAC/D,4BAAQyC,GAAE,kBAAazC,EAAE,GAAKd,UAAU,gBACpC,+CACCsG,EAAU1C,KAAI,SAAA0E,GAAC,OAAI,4BAAQxE,IAAKwE,EAAEZ,cAAeY,EAAEZ,sBAenDvC,IAGL,yBAAKnF,UAAU,YACX,4BAAQA,UAAU,mCAAlB,QAIR,yBAAKA,UAAU,gBACX,2BAAIU,EAA2B4D,SCxChCvC,eANS,SAAAC,GAAK,MAAK,CAC9B6E,sBAAuB7E,EAAM6G,sBAGN,SAAA1E,GAAO,MAAK,KAExBpC,EAzCc,SAAC,GAA6B,IAA5B8E,EAA2B,EAA3BA,sBA6B3B,OA3B6B,WAEzB,OAAQA,GAGJ,IAAK,QACD,OAAO,kBAAC,EAAD,MAEX,IAAK,aACD,OAAO,kBAAC,EAAD,MAEX,IAAK,eACD,OAAO,kBAAC,EAAD,MAEX,QACI,OAAO,yBAAK7G,UAAU,UAClB,yBAAKA,UAAU,UACX,yBAAKE,IAAI,gEAAgEC,IAAI,cAC7E,yBAAKD,IAAI,gEAAgEC,IAAI,cAEjF,+FAQZ4G,MCmBOhF,eAbS,SAAAC,GAAK,MAAK,MAEP,SAAAG,GAAQ,MAAK,CAEpC2G,4BAFoC,SAER7B,GACxB9E,EAAS,CACLG,KAAM,gCACN2E,uBAMGlF,EAnDc,SAAC,GAAmC,IAAlC+G,EAAiC,EAAjCA,4BAErB5B,EAAc,SAAA1G,GAEhBsI,EAA4BtI,EAAEoC,OAAOW,IAErCsC,SAASC,eAAetF,EAAEoC,OAAOW,IAAI4D,UAAUC,IAAI,gBACnDvB,SAASwB,iBAAiB,MAAMxG,SAAQ,SAAAgD,GAEjCA,EAAKN,KAAO/C,EAAEoC,OAAOW,IAGjBM,EAAKsD,UAAUG,SAAS,iBAEvBzD,EAAKsD,UAAUI,OAAO,oBAOtC,OACI,kBAAC,WAAD,KACI,yBAAKvH,UAAU,iBACX,4BACI,wBAAIuD,GAAG,QAAQvD,UAAU,MAAM+D,QAASmD,GAAxC,yBACA,wBAAI3D,GAAG,aAAavD,UAAU,MAAM+D,QAASmD,GAA7C,8BACA,wBAAI3D,GAAG,eAAevD,UAAU,MAAM+D,QAASmD,GAA/C,qCAGR,yBAAKlH,UAAU,yBACX,kBAAC,EAAD,WC0BD+B,eAbS,SAAAC,GAAK,MAAK,MAEP,SAAAG,GAAQ,MAAK,CAEpC2G,4BAFoC,SAER7B,GACxB9E,EAAS,CACLG,KAAM,gCACN2E,uBAMGlF,EAnDQ,SAAC,GAAmC,IAAlC+G,EAAiC,EAAjCA,4BAmBrB,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAY/I,SAAS,kBACrB,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,6BACA,wBAAIuD,GAAG,SAASQ,QA1BR,SAAAvD,GAEhBqF,SAASwB,iBAAiB,MAAMxG,SAAQ,SAAAgD,GAEjCA,EAAKN,KAAO/C,EAAEoC,OAAOW,IAGjBM,EAAKsD,UAAUG,SAAS,iBAEvBzD,EAAKsD,UAAUI,OAAO,mBAKlCuB,EAA4BtI,EAAEoC,OAAOW,KAYSvD,UAAU,6BAAhD,+BACA,yBAAKA,UAAU,2BACX,kBAAC,EAAD,YC6CL+B,eAfS,SAAAC,GAAK,MAAK,CAC9B+G,SAAU/G,EAAMgH,iBAGO,SAAA7G,GAAQ,MAAK,CAEpC8G,eAFoC,SAErBjI,GACXmB,EAAS,CACLG,KAAM,kBACNtB,gBAMGe,EAjFK,SAAC,GAA+B,IAA9BgH,EAA6B,EAA7BA,SAASE,EAAoB,EAApBA,eAAoB,EAElB1G,mBAAS,IAFS,mBAExCvB,EAFwC,KAEhCkI,EAFgC,KAI/ChE,qBAAU,WACNiE,MACF,CAACJ,IAEH,IAAMI,EAAoB,WACtB,IAAI7D,EAAWO,SAASC,eAAe,WAChB,IAApBiD,EAASpI,OACQ,OAAb2E,GACCA,EAAS6B,UAAUC,IAAI,eAIX,OAAb9B,GACCA,EAAS6B,UAAUI,OAAO,gBA8BtC,OAEI,yBAAKhE,GAAG,UAAUvD,UAAU,YACxB,yBAAKA,UAAU,kCACX,wBAAIA,UAAU,eAAd,YACA,0BAAM+C,SAzBG,SAAAvC,GACjBA,EAAEwC,iBACF,IAAIC,GAAS,EAITmG,EAFehJ,EAAkBY,GAER,GAE7B+H,EAASlI,SAAQ,SAAAwI,GACVA,IAAMD,IACLnG,GAAS,MAGbA,EAICC,MAAM,6DAHP+F,EAAeG,GACfF,EAAW,MAUuBlJ,UAAU,QACpC,yBAAKA,UAAU,cACX,2BAAOA,UAAU,WAAWoD,QAAQ,WAApC,sBACA,2BAAOC,aAAa,MAAMP,MAAO9B,EAASsC,SAjCzC,SAAA9C,GACjBkE,QAAQC,IAAInE,EAAEoC,OAAOE,OACrBoG,EAAW1I,EAAEoC,OAAOE,QA+B8DR,KAAK,OAAOiB,GAAG,UAAUV,KAAK,UAAU7C,UAAU,eAAewD,YAAY,SAEnJ,4BAAQxD,UAAU,qCAAlB,yBCKL+B,eAfS,SAAAC,GAAK,MAAK,CAC9B+G,SAAU/G,EAAMgH,iBAGO,SAAA7G,GAAQ,MAAK,CAEpCmH,gBAFoC,SAEpBtI,GACZmB,EAAS,CACLG,KAAM,mBACNtB,gBAMGe,EA7DM,SAAC,GAAgC,IAA/BgH,EAA8B,EAA9BA,SAASO,EAAqB,EAArBA,gBAE5B,OACI,kBAAC,WAAD,KAE4B,IAApBP,EAASpI,QACT,yBAAKX,UAAU,YACX,yBAAKA,UAAU,uBACX,wBAAIA,UAAU,eAAd,gBACA,2BAAOuJ,MAAM,kDACT,2BAAOvJ,UAAU,eACb,4BACI,wBAAIwJ,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,cAGR,2BAAOxJ,UAAU,eAET+I,EAASnF,KAAI,SAACpD,EAAEM,GAAH,OACT,wBAAIgD,IAAKhD,GACL,4BAAKN,GACL,4BAAKA,EAAEG,QACP,4BAAKI,EAAgBP,IACrB,4BACI,yBACIN,IAAI,8DACJ6D,QAAS,WAAKuF,EAAgB9I,mBCZnEiJ,G,MAdO,WAClB,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAY1J,SAAS,iBACrB,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,W,sBCbd0J,EAAe,CACjBxH,cAAe,CACX,CACIT,aAAc,QACdpB,SAAU,CAAC,WAEf,CACIoB,aAAc,iBACdpB,SAAU,CAAC,YAGnBmH,cAAe,GACfwB,aAAc,GACdlC,kBAAmB,GACnB+B,kBAAmB,IAiERc,eA9DC,WAAgC,IAA/B3H,EAA8B,uDAAxB0H,EAAaE,EAAW,uCAI3C,OAFAlF,QAAQC,IAAIiF,GAELA,EAAOtH,MACV,IAAK,mBACD,OAAO,2BACAN,GADP,IAEIE,cAAeF,EAAME,cAAc2H,OAAOD,EAAOvH,YAGzD,IAAK,oBACD,OAAO,2BACAL,GADP,IAEIE,cAAeF,EAAME,cAAc3B,QAAO,SAAAgF,GAAC,OAAIA,EAAE9D,eAAiBmI,EAAOvH,SAASZ,kBAG1F,IAAK,gCACD,OAAO,2BACAO,GADP,IAEI8E,kBAAmB8C,EAAO3C,iBAGlC,IAAK,mBAED,OADAvC,QAAQC,IAAI,kBACL,2BACA3C,GADP,IAEIwF,cAAexF,EAAMwF,cAAcqC,OAAOD,EAAOvJ,YAGzD,IAAK,oBACD,OAAO,2BACA2B,GADP,IAEIwF,cAAexF,EAAMwF,cAAcjH,QAAO,SAAAgF,GAAC,OAAIA,EAAEmC,eAAiBkC,EAAOvJ,SAASqH,kBAG1F,IAAK,gCACD,OAAO,2BACA1F,GADP,IAEI6G,kBAAmBe,EAAO3C,iBAGlC,IAAK,kBACD,OAAO,2BACAjF,GADP,IAEIgH,aAAchH,EAAMgH,aAAaa,OAAOD,EAAO5I,WAGvD,IAAK,mBACD,OAAO,2BACAgB,GADP,IAEIgH,aAAchH,EAAMgH,aAAazI,QAAO,SAAAgF,GAAC,OAAIA,IAAMqE,EAAO5I,aAQtE,OAAOgB,KCrDI8H,EAfH,WAER,OACI,kBAAC,IAAD,CAAUC,MAAOC,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,aAAaC,UAAWE,IAC1C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYC,UAAWV,Q,YCV7Da,iBAAO,kBAAC,EAAD,MAAOzE,SAASC,eAAe,W","file":"static/js/main.107c1b45.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navegacion = ({location}) => {\r\n\r\n    const resaltar = () => {\r\n        if(location === \"pagelenguajes\"){\r\n            return (\r\n                <Fragment>\r\n                    <Link className=\"navbar-brand item resaltar\" to=\"/\">Lenguajes</Link>                \r\n                    <Link className=\"navbar-brand item\" to=\"/alfabetos\">Alfabetos</Link>\r\n                    <Link className=\"navbar-brand item\" to=\"/palabras\">Palabras</Link>\r\n                </Fragment>\r\n            );\r\n        }\r\n        if(location === \"pagealfabetos\"){\r\n            return (\r\n                <Fragment>\r\n                    <Link className=\"navbar-brand item\" to=\"/\">Lenguajes</Link>                \r\n                    <Link className=\"navbar-brand item resaltar\" to=\"/alfabetos\">Alfabetos</Link>\r\n                    <Link className=\"navbar-brand item\" to=\"/palabras\">Palabras</Link>\r\n                </Fragment>\r\n            );\r\n        }\r\n        if(location === \"pagepalabras\"){\r\n            return (\r\n                <Fragment>\r\n                    <Link className=\"navbar-brand item\" to=\"/\">Lenguajes</Link>                \r\n                    <Link className=\"navbar-brand item\" to=\"/alfabetos\">Alfabetos</Link>\r\n                    <Link className=\"navbar-brand item resaltar\" to=\"/palabras\">Palabras</Link>\r\n                </Fragment>\r\n            );\r\n        }\r\n          \r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary navbar\">\r\n            <div className=\"title-nav-left\">\r\n                <Link className=\"contenedor-img\" to=\"/\">\r\n                    <img src=\"https://www.flaticon.es/svg/static/icons/svg/2092/2092543.svg\" alt=\"Logo\"/>\r\n                </Link>\r\n                <Link className=\"navbar-brand text\" to=\"/\">Teoria De Lenguajes Formales</Link>\r\n            </div>\r\n            <div className=\"title-nav-right\">\r\n                {resaltar()}\r\n            </div>\r\n        </nav>\r\n    ); \r\n}\r\n\r\nexport default Navegacion;","export const vectorizarAlfabeto = (alfabeto) => {\r\n    const vectorAlfabeto = alfabeto.split(\" \");\r\n    return vectorAlfabeto.filter( e => e !== '');\r\n}\r\n\r\nexport const formatearAlfabeto = (alfabeto) => {\r\n    const alfaVec = vectorizarAlfabeto(alfabeto);\r\n    return alfaVec;\r\n}\r\n\r\nexport const imprimirAlfabetoFormateado = (alfabeto) => {\r\n    \r\n    if(alfabeto.length !== 0){\r\n        let stringAlf = '{ ';\r\n        alfabeto.forEach((e,i) => {\r\n            if(alfabeto.length-1 === i){\r\n                stringAlf = stringAlf + e + ' }';\r\n            }\r\n            else{\r\n                stringAlf = stringAlf + e + ', ';\r\n            }\r\n        })\r\n        return stringAlf;\r\n    }\r\n}\r\n\r\nexport const imprimirAlfabetoFormateadoLen = (lenguaje) => {\r\n    if(lenguaje.nameLenguaje === 'Vacio'){\r\n        return lenguaje.alfabeto[0];\r\n    }\r\n    else{\r\n        if(lenguaje.alfabeto.length !== 0){\r\n            let stringAlf = '{ ';\r\n            lenguaje.alfabeto.forEach((e,i) => {\r\n                if(lenguaje.alfabeto.length-1 === i){\r\n                    stringAlf = stringAlf + e + ' }';\r\n                }\r\n                else{\r\n                    stringAlf = stringAlf + e + ', ';\r\n                }\r\n            })\r\n            return stringAlf;\r\n        }   \r\n    }\r\n}\r\n\r\nexport const imprimirSimbolosFormateado = (alfabeto) => {\r\n    if(alfabeto.simbolos.length !== 0){\r\n        let stringAlf = '{ ';\r\n        alfabeto.simbolos.forEach((e,i) => {\r\n            if(alfabeto.simbolos.length-1 === i){\r\n                stringAlf = stringAlf + e + ' }';\r\n            }\r\n            else{\r\n                stringAlf = stringAlf + e + ', ';\r\n            }\r\n        })\r\n        return stringAlf;\r\n    }\r\n}\r\n\r\nexport const cardinalidadDeUnLenguaje = (lenguaje) => {\r\n    if(lenguaje.nameLenguaje === 'Vacio'){\r\n        return 0\r\n    }\r\n    return lenguaje.alfabeto.length;\r\n}\r\n\r\nexport const cardinalidadDePalabra = (palabra) => (\r\n    palabra.length\r\n)\r\n\r\nexport const invertirPalabra = (palabra) => {\r\n    var x = palabra.length;\r\n    var palabraInvertida = \"\";\r\n    while (x>=0) {\r\n      palabraInvertida = palabraInvertida + palabra.charAt(x);\r\n      x--;\r\n    }\r\n    return palabraInvertida;\r\n}\r\n\r\nexport const invertirLenguaje = (lenguaje) => {\r\n    var x = lenguaje.length;\r\n    var lenguajeInvertido = [];\r\n    //console.log(x);\r\n    //console.log(lenguaje);\r\n    for (var i = 0; i < x; i++){\r\n        //console.log(lenguaje[i]);\r\n        lenguajeInvertido.push(invertirPalabra(lenguaje[i]));\r\n    }\r\n    return lenguajeInvertido;\r\n}\r\n\r\nexport const diferenciaLenguajes = (lenguaje1, lenguaje2) =>{\r\n    var x = lenguaje1.length;\r\n    var y = lenguaje2.length;\r\n\r\n    var diferenciaLenguaje = [];\r\n    var flag =0;\r\n    //console.log(x);\r\n    //console.log(y);\r\n    //console.log(lenguaje1);\r\n    //console.log(lenguaje2);    \r\n    for (var i = 0; i < x; i++){\r\n        for (var j = 0; j < y; j++){\r\n            if (lenguaje1[i] === lenguaje2[j]){\r\n                flag++;\r\n                break;\r\n            }\r\n        }\r\n        if(flag===0){\r\n            //console.log(lenguaje1[i]);\r\n            diferenciaLenguaje.push(lenguaje1[i]);\r\n        }else{\r\n            flag=0;\r\n        }\r\n    }\r\n    return diferenciaLenguaje;\r\n}\r\n\r\nexport const uniondelenguajes = (lenguajes) =>{\r\n    var l = lenguajes.length;\r\n    var union = [];\r\n    for(var i = 0; i < l; i++){\r\n        var lenguaje = lenguajes[i].alfabeto;\r\n        var x = lenguaje.length;\r\n        if(lenguajes[i].nameLenguaje !== \"Vacio\" ){\r\n            for(var j = 0; j < x; j++){\r\n                union.push(lenguaje[j])     \r\n            }\r\n        }\r\n    }\r\n    union = [...new Set(union)];\r\n    return union;\r\n}\r\n\r\nexport const diferenciaLenguajes2 = (lenguajes) =>{\r\n    var lenguaje1= lenguajes[0].alfabeto;\r\n    var lenguaje2= lenguajes[1].alfabeto;\r\n    var x = lenguaje1.length;\r\n    var y = lenguaje2.length;\r\n\r\n    var diferenciaLenguaje = [];\r\n    var flag =0;\r\n    //console.log(x);\r\n    //console.log(y);\r\n    //console.log(lenguaje1);\r\n    //console.log(lenguaje2);\r\n    for (var i = 0; i < x; i++){\r\n        for (var j = 0; j < y; j++){\r\n            if (lenguaje1[i] === lenguaje2[j]){\r\n                flag++;\r\n                break;\r\n            }\r\n        }\r\n        if(flag===0){\r\n            //console.log(lenguaje1[i]);\r\n            diferenciaLenguaje.push(lenguaje1[i]);\r\n        }else{\r\n            flag=0;\r\n        }\r\n    }\r\n    return diferenciaLenguaje;\r\n}\r\n\r\nexport const interseccionLenguajes = (lenguajes) =>{\r\n    var lenguaje1= lenguajes[0].alfabeto;\r\n    var lenguaje2= lenguajes[1].alfabeto;\r\n    var x = lenguaje1.length;\r\n    var y = lenguaje2.length;\r\n\r\n    var interseccionLenguaje = [];\r\n    var flag =0;\r\n    //console.log(x);\r\n    //console.log(y);\r\n    //console.log(lenguaje1);\r\n    //console.log(lenguaje2);\r\n    for (var i = 0; i < x; i++){\r\n        for (var j = 0; j < y; j++){\r\n            if (lenguaje1[i] === lenguaje2[j]){\r\n                flag++;\r\n                break;\r\n            }\r\n        }\r\n        if(flag===1){\r\n            //console.log(lenguaje1[i]);\r\n            interseccionLenguaje.push(lenguaje1[i]);\r\n            flag=0;\r\n        }else{\r\n            flag=0;\r\n        }\r\n    }\r\n    return interseccionLenguaje;\r\n}\r\n\r\n\r\nexport const concatenacionLenguajes = (lenguajes) =>{\r\n    var lenguaje1= lenguajes[0].alfabeto;\r\n    var lenguaje2= lenguajes[1].alfabeto;\r\n    var nomLenguaje1 = lenguajes[0].nameLenguaje;\r\n    var nomLenguaje2 = lenguajes[1].nameLenguaje;\r\n\r\n    var x = lenguaje1.length;\r\n    var y = lenguaje2.length;\r\n\r\n    var concatenacionLenguaje = [];\r\n    //console.log(x);\r\n    //console.log(y);\r\n    //console.log(lenguaje1);\r\n    //console.log(lenguaje2);\r\n    for (var i = 0; i < x; i++){\r\n        for (var j = 0; j < y; j++){\r\n            if(nomLenguaje1===\"Lenguaje Vacio\"){\r\n                concatenacionLenguaje.push(lenguaje2[j]);\r\n            }\r\n            if(nomLenguaje2===\"Lenguaje Vacio\"){\r\n                concatenacionLenguaje.push(lenguaje1[i]);\r\n            }\r\n            if(nomLenguaje1===\"Vacio\"|| nomLenguaje2===\"Vacio\"){\r\n                return [\"Φ\"];\r\n            }\r\n            if(nomLenguaje1!=\"Lenguaje Vacio\" && nomLenguaje2!=\"Lenguaje Vacio\" && nomLenguaje1!=\"Vacio\" && nomLenguaje2!=\"Vacio\"){\r\n                if(lenguaje1[i]===\"ε\"){\r\n                    concatenacionLenguaje.push(lenguaje2[j]);\r\n                }if(lenguaje2[j]===\"ε\"){\r\n                    concatenacionLenguaje.push(lenguaje1[i]);\r\n                }\r\n                if(lenguaje1[i]!=\"ε\"&& lenguaje2[j]!=\"ε\"){\r\n                    concatenacionLenguaje.push(lenguaje1[i]+lenguaje2[j]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return concatenacionLenguaje;\r\n}\r\n\r\nexport const diferenciaAlfabetos = (alfabetos) =>{\r\n    var alfabeto1= alfabetos[0].simbolos;\r\n    var alfabeto2= alfabetos[1].simbolos;\r\n    var x = alfabeto1.length;\r\n    var y = alfabeto2.length;\r\n\r\n    var diferenciaAlfabeto = [];\r\n    var flag =0;\r\n    //console.log(x);\r\n    //console.log(y);\r\n    //console.log(alfabeto1);\r\n    //console.log(alfabeto2);    \r\n    for (var i = 0; i < x; i++){\r\n        for (var j = 0; j < y; j++){\r\n            if (alfabeto1[i] === alfabeto2[j]){\r\n                flag++;\r\n                break;\r\n            }\r\n        }\r\n        if(flag===0){\r\n            //console.log(alfabeto1[i]);\r\n            diferenciaAlfabeto.push(alfabeto1[i]);\r\n        }else{\r\n            flag=0;\r\n        }\r\n    }\r\n    return diferenciaAlfabeto;\r\n}\r\n\r\nexport const interseccionAlfabetos = (alfabetos) =>{\r\n    var alfabeto1= alfabetos[0].simbolos;\r\n    var alfabeto2= alfabetos[1].simbolos;\r\n    var x = alfabeto1.length;\r\n    var y = alfabeto2.length;\r\n\r\n    var interseccionAlfabetos = [];\r\n    var flag =0;\r\n    //console.log(x);\r\n    //console.log(y);\r\n    //console.log(alfabeto1);\r\n    //console.log(alfabeto2);\r\n    for (var i = 0; i < x; i++){\r\n        for (var j = 0; j < y; j++){\r\n            if (alfabeto1[i] === alfabeto2[j]){\r\n                flag++;\r\n                break;\r\n            }\r\n        }\r\n        if(flag===1){\r\n            //console.log(alfabeto1[i]);\r\n            interseccionAlfabetos.push(alfabeto1[i]);\r\n            flag=0;\r\n        }else{\r\n            flag=0;\r\n        }\r\n    }\r\n    return interseccionAlfabetos;\r\n}\r\n\r\nexport const uniondealfabetos = (alfabetos) =>{\r\n    var l = alfabetos.length;\r\n    var union = [];\r\n    for(var i = 0; i < l; i++ ){\r\n        var alfabeto = alfabetos[i].simbolos;\r\n        var x = alfabeto.length;\r\n        if(alfabetos[i].nameAlfabeto !== \"Vacio\"){\r\n            for(var j = 0; j < x; j++){\r\n                union.push(alfabeto[j]);\r\n            }\r\n        }\r\n    }\r\n    union = [...new Set(union)];\r\n    return union;\r\n}\r\n\r\n//funciona\r\nexport const potenciaLenguaje = (lenguaje,potencia) => {\r\n    if(potencia != 0){\r\n        if(potencia !== 1){\r\n            const leng = lenguaje;\r\n            var resultadoParcial = {nameLenguaje: \"resParcial\",alfabeto: []}\r\n            resultadoParcial.alfabeto = lenguaje.alfabeto;\r\n            for(let i=2 ; i <= potencia ; i++){\r\n                resultadoParcial.alfabeto = concatenacionLenguajes([resultadoParcial,leng]);\r\n            }\r\n            return resultadoParcial.alfabeto;\r\n        }\r\n        else{\r\n            return [lenguaje];\r\n        }\r\n    }\r\n    else{\r\n        return [\"ε\"]\r\n    }\r\n\r\n}\r\n\r\n\r\n// Seccion de potencia con recursividad sin validacion de vacio y lenguaje vacio, pot15 mas de 14 millones de concatenaciones\r\n\r\nconst concatenacionEspecialAlfabetos = (alfabetos) =>{\r\n    var lenguaje1= alfabetos[0];\r\n    var lenguaje2= alfabetos[1];\r\n    var x = lenguaje1.length;\r\n    var y = lenguaje2.length;\r\n    var concatenacionLenguaje = [];\r\n    for (var i = 0; i < x; i++){\r\n        for (var j = 0; j < y; j++){\r\n                concatenacionLenguaje.push(lenguaje1[i]+lenguaje2[j]);        \r\n        }\r\n    }\r\n    return concatenacionLenguaje;\r\n}\r\n\r\nexport const potenciaLenguajeRecursiva = (alfabeto,potencia) => {\r\n    const alf = alfabeto;\r\n    var resultadoParcial = [];\r\n    resultadoParcial = alfabeto;\r\n    if(potencia == 1){\r\n        resultadoParcial = alfabeto;\r\n    }\r\n    else{\r\n        resultadoParcial = concatenacionEspecialAlfabetos([potenciaLenguajeRecursiva(resultadoParcial,potencia-1),alf])\r\n    }\r\n    return resultadoParcial;\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { formatearAlfabeto } from '../modules/modulo1';\r\n\r\nconst FormLenguaje = ({list,agregarLenguaje}) => {\r\n\r\n    const [namelenguaje,setNameLenguaje] = useState('');\r\n    const [alfabeto,setAlfabeto] = useState('');\r\n\r\n    const handleChange = e => {\r\n        if(e.target.name === \"nameLenguage\") setNameLenguaje(e.target.value);\r\n        if(e.target.name === \"alfabeto\") setAlfabeto(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        var existe = false;\r\n        // console.log(\"lista a comparar\",list);\r\n        list.forEach(e => {\r\n            if(e.nameLenguaje === namelenguaje) return existe=true;\r\n        })\r\n\r\n        //comprueba que los campos esten llenos\r\n        if(namelenguaje !== '' && alfabeto !== ''){\r\n            //y que el nombre del lenguaje no se repita\r\n            if(existe){\r\n                alert(\"El nombre de tu lenguaje ya fue asignado a otro previamente.\\nIntenta con otro...!\");\r\n            }\r\n            else{\r\n                let alfabetoFormateado = formatearAlfabeto(alfabeto)\r\n                let lenguaje = {\r\n                    nameLenguaje: namelenguaje,\r\n                    alfabeto: alfabetoFormateado\r\n                }\r\n                // console.log(lenguaje);\r\n                agregarLenguaje(lenguaje);\r\n                setNameLenguaje('');\r\n                setAlfabeto('');\r\n            }\r\n        }\r\n        else{\r\n            alert(\"Asegurate de llenar el formulario...!\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"col-md-5\"> \r\n            <div className=\"card-body bg-primary target\">\r\n\r\n                <h3 className=\"text-center\">Lenguaje</h3>\r\n                \r\n                <form onSubmit={handleSubmit} className=\"form\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"label-tx\" htmlFor=\"nameLenguaje\">Nombre del lenguaje</label>\r\n                        <input autoComplete=\"off\" value={namelenguaje} onChange={handleChange} type=\"text\" name=\"nameLenguage\" className=\"form-control\" id=\"nameLenguaje\" placeholder=\"Mi lenguaje\"/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"label-tx\" htmlFor=\"area-texto\">Ingresa el alfabeto <span>(separando por espacios)</span> </label>\r\n                        <textarea value={alfabeto} onChange={handleChange} className=\"form-control\" name=\"alfabeto\" rows=\"3\" id=\"area-texto\" placeholder=\"Ejemplo: a b c d e...\" ></textarea>\r\n                    </div>\r\n                    <button className=\"btn btn-block badge-success boton\">Agregar Lenguaje</button>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//Haciendo uso del store de redux\r\n\r\nconst mapStateToProps = state => ({\r\n    list: state.listLenguajes\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    \r\n    agregarLenguaje(lenguaje){\r\n        dispatch({\r\n            type: 'AGREGAR_LENGUAJE',\r\n            lenguaje\r\n        })\r\n    }\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FormLenguaje);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//Importando funcuonalidad de los modulos\r\nimport { imprimirAlfabetoFormateadoLen, cardinalidadDeUnLenguaje } from '../modules/modulo1';\r\n\r\nconst ListLenguaje = ({lista,elimminarLenguaje}) => {\r\n    \r\n    const mostrarLenguajes = () => {\r\n        if(lista.length === 0){\r\n            return <div className=\"doc-blank\" >\r\n                <img src=\"https://www.flaticon.es/svg/static/icons/svg/187/187293.svg\" alt=\"docs\"/>\r\n                <h4>¡ Ningun lenguaje por aquí !</h4>\r\n            </div>\r\n        }\r\n        else{\r\n            return lista.map((elem,i)=>(\r\n                <div key={i} className=\"card-item\">\r\n                    <div className=\"card-top\">\r\n                        <h3>{elem.nameLenguaje}</h3>\r\n                        <button onClick={\r\n                            () => {\r\n                                if(elem.nameLenguaje === 'Vacio' || elem.nameLenguaje === 'Lenguaje Vacio'){\r\n                                    alert(\"ALERTA... Este lenguaje es estandar\\nde las operaciones entre lenguajes\\nNo se puede borrar...!\");\r\n                                }\r\n                                else{\r\n                                    if(window.confirm(`Seguro que:\\n¿ Deseas eliminar el lenguaje \"${elem.nameLenguaje}\" de la lista ?`))\r\n                                    elimminarLenguaje(elem)\r\n                                }\r\n                            }\r\n                        } >X</button>\r\n                    </div>\r\n                    <div className=\"cardinalidad\">Cardinalidad: {cardinalidadDeUnLenguaje(elem)}</div>\r\n                    <div className=\"card-info\">\r\n                        <div className=\"alfabeto\">\r\n                            <p>{imprimirAlfabetoFormateadoLen(elem)}</p>\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n            ))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"col-md-7\">\r\n            <div className=\"contenedor-lenguajes\">\r\n                <h3 className=\"text-center\">Tus Lenguajes</h3>\r\n                {\r\n                    mostrarLenguajes()\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n//utilizando el store de redux\r\n\r\nconst mapStateToProps = state => ({\r\n    lista: state.listLenguajes\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    elimminarLenguaje(lenguaje){\r\n        dispatch({\r\n            type: 'ELIMINAR_LENGUAJE',\r\n            lenguaje\r\n        })\r\n    }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListLenguaje);","import React, {Fragment, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { invertirLenguaje, imprimirAlfabetoFormateado } from '../../modules/modulo1';\r\n\r\nconst InvertirLenguajes = ({lenguajes}) => {\r\n\r\n    const [seleccion,setSeleccion] = useState('Lenguajes...');\r\n    const [salida,setSalida] = useState([]);\r\n    const [lenguaje,setLenguaje] = useState({nameLenguaje: '',alfabeto:[]})\r\n\r\n    const handleChange = e => {\r\n        // console.log(\"change => \",e.target.value);\r\n        if(e.target.value !== 'Lenguajes...'){\r\n            //para que no se quede el resultado anterior\r\n            setSalida([]);\r\n            // console.log(\"change dentro del if\",e.target.value);\r\n            var x = e.target.value;\r\n            let leng = lenguajes.filter(e => e.nameLenguaje === x);\r\n            setLenguaje(leng[0])\r\n        }\r\n        else{\r\n            setSalida([]);\r\n            setLenguaje({nameLenguaje: '',alfabeto:[]})\r\n        }\r\n        setSeleccion(e.target.value);\r\n    }\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault();\r\n        console.log(seleccion);\r\n        if(seleccion !== 'Lenguajes...'){\r\n            let Lenguaje = lenguajes.filter(e => e.nameLenguaje === seleccion);\r\n            // console.log(\"lenguaje seleccionado:>\",lenguaje[0]);\r\n            // console.log(\"lenguaje???\",lenguaje[0]);\r\n            let lenguajeInvertido = invertirLenguaje(Lenguaje[0].alfabeto);\r\n            // console.log(lenguajeInvertido);\r\n            setSalida(lenguajeInvertido);\r\n        }\r\n        else{\r\n            alert(\"En la operación invertir lenguajes es necesario\\nque seleccione el lenguaje que va a procesar.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"formulario-seleccion-lenguaje\">\r\n            <h3>Inverso de un lenguaje</h3>\r\n            <form className=\"formulario-seleccion-lenguaje__form form-inline\">\r\n                \r\n                    <div className=\"form-group row-custom\">\r\n                        <label htmlFor=\"lenguajeSeleccionado\">Selecciona un lenguaje</label>\r\n                        <select onChange={handleChange} value={seleccion} className=\"form-control\" id=\"lenguajeSeleccionado\">\r\n                            <option>Lenguajes...</option>\r\n                            {lenguajes.map(e => <option key={e.nameLenguaje} >{e.nameLenguaje}</option>)}\r\n                        </select>\r\n                    </div>\r\n                \r\n                <div className=\"col-auto\">\r\n                    <button onClick={handleClick} className=\"btn btn-success boton\">Go</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"salida\">\r\n                { \r\n                <Fragment>\r\n                    <p>{imprimirAlfabetoFormateado(lenguaje.alfabeto)}</p>\r\n                    <p> = </p>\r\n                    <p>{imprimirAlfabetoFormateado(salida)}</p>\r\n                </Fragment>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lenguajes: state.listLenguajes\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(InvertirLenguajes);","import React,{useState,useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { uniondelenguajes, imprimirAlfabetoFormateado } from '../../modules/modulo1';\r\n\r\nconst UnionLenguajes = ({lenguajes}) => {\r\n\r\n    const [numeroDeLenguajes,setNumeroDeLenguajes] = useState(2);\r\n    const [nombresDeLenguajesSeleccionados,setNombresDeLenguajesSeleccionados] = useState([]);\r\n    const [salida,setSalida] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        mostrarBarrasDeSeleccion();\r\n    },[numeroDeLenguajes])\r\n    \r\n    useEffect(()=>{\r\n        // console.log(nombresDeLenguajesSeleccionados);\r\n        trabajandoSalida();\r\n    },[nombresDeLenguajesSeleccionados])\r\n\r\n    const trabajandoSalida = () => {\r\n        // console.log(nombresDeLenguajesSeleccionados);\r\n        if(nombresDeLenguajesSeleccionados.length !== 0){\r\n\r\n            var vecls = [];\r\n            for(let i=0 ; i < nombresDeLenguajesSeleccionados.length ; i++){\r\n                let elemento = lenguajes.filter( e => e.nameLenguaje === nombresDeLenguajesSeleccionados[i]);\r\n                vecls.push(elemento[0]);\r\n            }\r\n            \r\n            setSalida(uniondelenguajes(vecls));\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        if(e.target.value >= 2){\r\n            // console.log(e.target.value);\r\n            setNumeroDeLenguajes(e.target.value)\r\n        }\r\n        else{\r\n           // console.log(e.target.value);\r\n            setNumeroDeLenguajes(2);            \r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        \r\n        e.preventDefault();\r\n\r\n        // let elemento = document.getElementById(\"lenguaje1SU\");\r\n        // console.log(elemento.value);\r\n\r\n        let nombresLenguajesSeleccionados = [];\r\n        for (let i=0 ; i < numeroDeLenguajes ; i++) {\r\n            let elemento = document.getElementById(`lenguaje${i+1}SU`);\r\n            if(elemento != null){\r\n                nombresLenguajesSeleccionados.push(elemento.value);\r\n            }\r\n            else console.log(\"no hay nada seleccionado\");\r\n        }\r\n\r\n        console.log(nombresLenguajesSeleccionados);\r\n        \r\n        var seleccionesCompletas = true\r\n        for(let i=0 ; i < nombresLenguajesSeleccionados.length ; i++){\r\n            if(nombresLenguajesSeleccionados[i] === \"Lenguaje...\"){\r\n                seleccionesCompletas = false;\r\n            }\r\n        }\r\n        \r\n        console.log(seleccionesCompletas);\r\n        if(seleccionesCompletas){\r\n            setNombresDeLenguajesSeleccionados(nombresLenguajesSeleccionados);\r\n        }\r\n        else alert(\"En la operación union de lenguajes es necesario\\nque complete la cantidad de lenguajes que selecciono.\\nDe lo contrario seleccione otra cantidad\");\r\n        \r\n    }\r\n\r\n    const mostrarBarrasDeSeleccion = () => {\r\n        //rebusque jajaja\r\n        let vector = [];\r\n        for (let i=0 ; i < numeroDeLenguajes ; i++) vector.push('x');\r\n\r\n        return vector.map((e,i)=>(\r\n            <div key={i+1} className=\"col\">\r\n                <label htmlFor={`lenguaje${i+1}SU`}>Selecciona el lenguaje {`${i+1}`}</label>\r\n                <select id={`lenguaje${i+1}SU`} className=\"form-control\">\r\n                    <option>Lenguaje...</option>\r\n                    {lenguajes.map(e => <option key={e.nameLenguaje}>{e.nameLenguaje}</option>)}\r\n                </select>\r\n            </div>\r\n        ))\r\n\r\n        //si jala carajoo\r\n    }\r\n\r\n    return(\r\n        <div className=\"formato-seleccion-lenguajes\">\r\n            <h3>Union entre lenguajes</h3>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-row row-1\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"numerolenguajes\">Numero de lenguajes</label>\r\n                        <select onChange={handleChange} id=\"numerolenguajes\" value={numeroDeLenguajes} className=\"form-control\">\r\n                            <option>2</option>\r\n                            {lenguajes.map((e,i) => {if(i>=2){return <option key={i}>{i+1}</option>}})}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row row-2\">\r\n                    {mostrarBarrasDeSeleccion()}\r\n                </div>\r\n\r\n                <div className=\"col-auto\">\r\n                    <button className=\"btn btn-success boton btn-block\">Go</button>\r\n                </div>\r\n\r\n            </form>\r\n            <div className=\"Salida\">\r\n                <p>{imprimirAlfabetoFormateado(salida)}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lenguajes: state.listLenguajes\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UnionLenguajes);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { potenciaLenguajeRecursiva, imprimirAlfabetoFormateado } from '../../modules/modulo1';\r\n\r\nconst PotenciaLenguaje = ({lenguajes}) => {\r\n\r\n    const [seleccion,setSeleccion] = useState('Lenguajes...');\r\n    const [potencia,setPotencia] = useState(0);\r\n    const [salida,setSalida] = useState([]);\r\n    const [lenguaje,setLenguaje] = useState({nameLenguaje: '',alfabeto:[]})\r\n\r\n    const handleChange = e => {\r\n        // console.log(\"change => \",e.target.id,e.target.value);\r\n\r\n        if(e.target.id === \"lenguajeSeleccionado\"){    \r\n            if(e.target.value !== 'Lenguajes...'){\r\n                //para que no se quede el resultado anterior\r\n            setSalida([]);\r\n            // console.log(\"change dentro del if\",e.target.value);\r\n            var x = e.target.value;\r\n            let leng = lenguajes.filter(e => e.nameLenguaje === x);\r\n            setLenguaje(leng[0])\r\n            }\r\n            else{\r\n                setSalida([]);\r\n                setLenguaje({nameLenguaje: '',alfabeto:[]})\r\n            }\r\n            setSeleccion(e.target.value);\r\n        }\r\n\r\n        if(e.target.id === \"potencia\"){\r\n            setPotencia(e.target.value)\r\n        }\r\n    }\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault();\r\n        // console.log(seleccion);\r\n        if(seleccion !== 'Lenguajes...'){\r\n            if(lenguaje.nameLenguaje !== 'Vacio'){\r\n                if(lenguaje.nameLenguaje !== 'Lenguaje Vacio'){\r\n                    if(potencia == 0){\r\n                        setSalida([\"Φ\"])\r\n                    }\r\n                    else{\r\n                        if(potencia >= 0){\r\n                            console.log(lenguaje);\r\n                            //aqui va el proceso de potenciar el lenguaje\r\n                            setSalida(potenciaLenguajeRecursiva(lenguaje.alfabeto,potencia));\r\n                        }\r\n                        else{\r\n                            alert(\"CUIDADO...La potencia debe ser mayor o igual a 0...!\")\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    setSalida([\"ε\"])\r\n                }\r\n            }\r\n            else{\r\n                setSalida([\"Φ\"]);\r\n            }\r\n        }\r\n        else{\r\n            alert(\"En la operación potencia de un lenguaje es necesario\\nque seleccione el lenguaje que va a procesar.\");\r\n        }\r\n    }\r\n\r\n    const revisandoSalida = () => {\r\n        if(salida[0] !== \"ε\" && salida[0] !== \"Φ\"){\r\n            return imprimirAlfabetoFormateado(salida)\r\n        }   \r\n        if(salida[0] === \"Φ\"){\r\n            return \"Φ\";\r\n        }\r\n        if(salida[0] === \"ε\"){\r\n            return \"{ε}\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"formulario-seleccion-lenguaje\">\r\n            <h3>Potencia de un lenguaje</h3>\r\n            <form className=\"formulario-seleccion-lenguaje__form form-inline\">\r\n                \r\n                    <div className=\"form-group row-custom\">\r\n                        <label htmlFor=\"lenguajeSeleccionado\">Selecciona un lenguaje</label>\r\n                        <select onChange={handleChange} value={seleccion} className=\"form-control\" id=\"lenguajeSeleccionado\">\r\n                            <option>Lenguajes...</option>\r\n                            {lenguajes.map(e => <option key={e.nameLenguaje}>{e.nameLenguaje}</option>)}\r\n                        </select>\r\n                        <div className=\"col\">\r\n                            <input id=\"potencia\" min=\"0\" onChange={handleChange} value={potencia} type=\"number\" className=\"form-control\" placeholder=\"potencia\"/>\r\n                        </div>\r\n                    </div>\r\n                \r\n                <div className=\"col-auto\">\r\n                    <button onClick={handleClick} className=\"btn btn-success boton\">Go</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"salida\">\r\n                <p className=\"pot\">{revisandoSalida()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lenguajes: state.listLenguajes\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PotenciaLenguaje);","import React,{useState,useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { concatenacionLenguajes, imprimirAlfabetoFormateado } from '../../modules/modulo1';\r\n\r\nconst ConcatenacionLenguajes = ({lenguajes}) => {\r\n\r\n    const [nombresDeLenguajesSeleccionados,setNombresDeLenguajesSeleccionados] = useState([]);\r\n    const [salida,setSalida] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        // console.log(nombresDeLenguajesSeleccionados);\r\n        trabajandoSalida();\r\n    },[nombresDeLenguajesSeleccionados])\r\n\r\n    const trabajandoSalida = () => {\r\n        // console.log(nombresDeLenguajesSeleccionados);\r\n        if(nombresDeLenguajesSeleccionados.length !== 0){\r\n\r\n            var vecls = [];\r\n            for(let i=0 ; i < nombresDeLenguajesSeleccionados.length ; i++){\r\n                let elemento = lenguajes.filter( e => e.nameLenguaje === nombresDeLenguajesSeleccionados[i]);\r\n                vecls.push(elemento[0]);\r\n            }\r\n            \r\n            setSalida(concatenacionLenguajes(vecls));\r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let nombresLenguajesSeleccionados = [];\r\n        for (let i=0 ; i < 2 ; i++) {\r\n            let elemento = document.getElementById(`lenguaje${i+1}`);\r\n            if(elemento != null){\r\n                nombresLenguajesSeleccionados.push(elemento.value);\r\n            }\r\n            else console.log(\"no hay nada seleccionado\");\r\n        }\r\n        \r\n        console.log(nombresLenguajesSeleccionados);\r\n        if(nombresLenguajesSeleccionados[0] !== \"Lenguaje...\"){\r\n            if(nombresLenguajesSeleccionados[1] !== \"Lenguaje...\"){\r\n                setNombresDeLenguajesSeleccionados(nombresLenguajesSeleccionados);\r\n            }\r\n            else{\r\n                alert(\"En la operación concatenación de lenguajes es necesario\\nque seleccione dos lenguajes:\\npor favor escoja el lenguajes 2\");\r\n            }\r\n        }\r\n        else{\r\n            alert(\"En la operación concatenación de lenguajes es necesario\\nque seleccione dos lenguajes:\\npor favor escoja el lenguajes 1\");\r\n        }\r\n        \r\n    }\r\n\r\n    const mostrarBarrasDeSeleccion = () => {\r\n        //rebusque jajaja\r\n        let vector = [];\r\n        for (let i=0 ; i < 2 ; i++) vector.push('x');\r\n\r\n        return vector.map((e,i)=>(\r\n            <div key={i+1} className=\"col\">\r\n                <label htmlFor={`lenguaje${i+1}`}>Selecciona el lenguaje {`${i+1}`}</label>\r\n                <select id={`lenguaje${i+1}`} className=\"form-control\">\r\n                    <option>Lenguaje...</option>\r\n                    {lenguajes.map(e => <option key={e.nameLenguaje}>{e.nameLenguaje}</option>)}\r\n                </select>\r\n            </div>\r\n        ))\r\n\r\n        //si jala carajoo\r\n    }\r\n\r\n    const revisandoSalida = () => {\r\n        if(salida[0] !== \"Φ\"){\r\n            return imprimirAlfabetoFormateado(salida)\r\n        }   \r\n        else{\r\n            return \"Φ\"\r\n        }     \r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"formato-seleccion-lenguajes\">\r\n            <h3>Concatenación entre lenguajes</h3>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-row row-unica\">\r\n                    {mostrarBarrasDeSeleccion()}\r\n                </div>\r\n\r\n                <div className=\"col-auto\">\r\n                    <button className=\"btn btn-success boton btn-block\">Go</button>\r\n                </div>\r\n\r\n            </form>\r\n            <div className=\"Salida-unica\">\r\n                <p>{revisandoSalida()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lenguajes: state.listLenguajes\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ConcatenacionLenguajes);","import React,{useState,useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { interseccionLenguajes, imprimirAlfabetoFormateado } from '../../modules/modulo1';\r\n\r\nconst InterseccionLenguajes = ({lenguajes}) => {\r\n\r\n    const [nombresDeLenguajesSeleccionados,setNombresDeLenguajesSeleccionados] = useState([]);\r\n    const [salida,setSalida] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        trabajandoSalida();\r\n    },[nombresDeLenguajesSeleccionados])\r\n\r\n    const trabajandoSalida = () => {\r\n        // console.log(nombresDeLenguajesSeleccionados);\r\n        if(nombresDeLenguajesSeleccionados.length !== 0){\r\n\r\n            var vecls = [];\r\n            for(let i=0 ; i < nombresDeLenguajesSeleccionados.length ; i++){\r\n                let elemento = lenguajes.filter( e => e.nameLenguaje === nombresDeLenguajesSeleccionados[i]);\r\n                vecls.push(elemento[0]);\r\n            }\r\n            \r\n            setSalida(interseccionLenguajes(vecls));\r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let nombresLenguajesSeleccionados = [];\r\n        for (let i=0 ; i < 2 ; i++) {\r\n            let elemento = document.getElementById(`lenguaje${i+1}`);\r\n            if(elemento != null){\r\n                nombresLenguajesSeleccionados.push(elemento.value);\r\n            }\r\n            else console.log(\"no hay nada seleccionado\");\r\n        }\r\n        \r\n        console.log(nombresLenguajesSeleccionados);\r\n        if(nombresLenguajesSeleccionados[0] !== \"Lenguaje...\"){\r\n            if(nombresLenguajesSeleccionados[1] !== \"Lenguaje...\"){\r\n                setNombresDeLenguajesSeleccionados(nombresLenguajesSeleccionados);\r\n            }\r\n            else{\r\n                alert(\"En la operación intersección de lenguajes es necesario\\nque seleccione dos lenguajes:\\npor favor escoja el lenguaje 2\");\r\n            }\r\n        }\r\n        else{\r\n            alert(\"En la operación intersección de lenguajes es necesario\\nque seleccione dos lenguajes:\\npor favor escoja el lenguaje 1\");\r\n        }\r\n\r\n    }\r\n\r\n    const mostrarBarrasDeSeleccion = () => {\r\n        //rebusque jajaja\r\n        let vector = [];\r\n        for (let i=0 ; i < 2 ; i++) vector.push('x');\r\n\r\n        return vector.map((e,i)=>(\r\n            <div key={i+1} className=\"col\">\r\n                <label htmlFor={`lenguaje${i+1}`}>Selecciona el lenguaje {`${i+1}`}</label>\r\n                <select id={`lenguaje${i+1}`} className=\"form-control\">\r\n                    <option>Lenguaje...</option>\r\n                    {lenguajes.map(e => <option key={e.nameLenguaje}>{e.nameLenguaje}</option>)}\r\n                </select>\r\n            </div>\r\n        ))\r\n\r\n        //si jala carajoo\r\n    }\r\n\r\n    return(\r\n        <div className=\"formato-seleccion-lenguajes\">\r\n            <h3>Intersección entre lenguajes</h3>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-row row-unica\">\r\n                    {mostrarBarrasDeSeleccion()}\r\n                </div>\r\n\r\n                <div className=\"col-auto\">\r\n                    <button className=\"btn btn-success boton btn-block\">Go</button>\r\n                </div>\r\n\r\n            </form>\r\n            <div className=\"Salida-unica\">\r\n                <p>{imprimirAlfabetoFormateado(salida)}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lenguajes: state.listLenguajes\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(InterseccionLenguajes);","import React,{useState,useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { diferenciaLenguajes2, imprimirAlfabetoFormateado } from '../../modules/modulo1';\r\n\r\nconst DiferenciaLenguajes = ({lenguajes}) => {\r\n\r\n    const [nombresDeLenguajesSeleccionados,setNombresDeLenguajesSeleccionados] = useState([]);\r\n    const [salida,setSalida] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        trabajandoSalida();\r\n    },[nombresDeLenguajesSeleccionados])\r\n\r\n    const trabajandoSalida = () => {\r\n        // console.log(nombresDeLenguajesSeleccionados);\r\n        if(nombresDeLenguajesSeleccionados.length !== 0){\r\n\r\n            var vecls = [];\r\n            for(let i=0 ; i < nombresDeLenguajesSeleccionados.length ; i++){\r\n                let elemento = lenguajes.filter( e => e.nameLenguaje === nombresDeLenguajesSeleccionados[i]);\r\n                vecls.push(elemento[0]);\r\n            }\r\n            \r\n            setSalida(diferenciaLenguajes2(vecls));\r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let nombresLenguajesSeleccionados = [];\r\n        for (let i=0 ; i < 2 ; i++) {\r\n            let elemento = document.getElementById(`lenguaje${i+1}`);\r\n            if(elemento != null){\r\n                nombresLenguajesSeleccionados.push(elemento.value);\r\n            }\r\n            else console.log(\"no hay nada seleccionado\");\r\n        }\r\n        console.log(nombresLenguajesSeleccionados);\r\n        if(nombresLenguajesSeleccionados[0] !== \"Lenguaje...\"){\r\n            if(nombresLenguajesSeleccionados[1] !== \"Lenguaje...\"){\r\n                setNombresDeLenguajesSeleccionados(nombresLenguajesSeleccionados);\r\n            }\r\n            else{\r\n                alert(\"En la operación diferencia de lenguajes es necesario\\nque seleccione dos lenguajes:\\npor favor escoja el lenguaje 2\");\r\n            }\r\n        }\r\n        else{\r\n            alert(\"En la operación diferencia de lenguajes es necesario\\nque seleccione dos lenguajes:\\npor favor escoja el lenguaje 1\");\r\n        }\r\n\r\n    }\r\n\r\n    const mostrarBarrasDeSeleccion = () => {\r\n        //rebusque jajaja\r\n        let vector = [];\r\n        for (let i=0 ; i < 2 ; i++) vector.push('x');\r\n\r\n        return vector.map((e,i)=>(\r\n            <div key={i+1} className=\"col\">\r\n                <label htmlFor={`lenguaje${i+1}`}>Selecciona el lenguaje {`${i+1}`}</label>\r\n                <select id={`lenguaje${i+1}`} className=\"form-control\">\r\n                    <option>Lenguaje...</option>\r\n                    {lenguajes.map(e => <option key={e.nameLenguaje}>{e.nameLenguaje}</option>)}\r\n                </select>\r\n            </div>\r\n        ))\r\n\r\n        //si jala carajoo\r\n    }\r\n\r\n    return(\r\n        <div className=\"formato-seleccion-lenguajes\">\r\n            <h3>Diferencia entre lenguajes</h3>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-row row-unica\">\r\n                    {mostrarBarrasDeSeleccion()}\r\n                </div>\r\n\r\n                <div className=\"col-auto\">\r\n                    <button className=\"btn btn-success boton btn-block\">Go</button>\r\n                </div>\r\n\r\n            </form>\r\n            <div className=\"Salida-unica\">\r\n                <p>{imprimirAlfabetoFormateado(salida)}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lenguajes: state.listLenguajes\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DiferenciaLenguajes);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport InvertirLenguaje from './operacionesLenguajes/invertirLenguaje';\r\nimport UnionLenguajes from './operacionesLenguajes/unionLenguajes';\r\nimport PotenciaLenguaje from './operacionesLenguajes/potenciaLenguaje';\r\nimport ConcatenacionLenguajes from './operacionesLenguajes/concatenacionLenguajes';\r\nimport InterseccionLenguajes from './operacionesLenguajes/interseccionLenguajes';\r\nimport DiferenciaLenguajes from './operacionesLenguajes/diferenciaLenguajes';\r\n\r\nconst WorkinSpaceLenguajes = ({operacionSeleccionada}) => {\r\n\r\n    const espacioDeOperaciones = () => {\r\n\r\n        switch (operacionSeleccionada) {\r\n\r\n            case 'inverso':\r\n                return <InvertirLenguaje/>                \r\n                \r\n\r\n            case 'potencia':\r\n                return <PotenciaLenguaje/>\r\n                \r\n\r\n            case 'concatenacion':\r\n                return <ConcatenacionLenguajes/>\r\n                \r\n\r\n            case 'interseccion':\r\n                return <InterseccionLenguajes/>\r\n                \r\n\r\n            case 'diferencia':\r\n                return <DiferenciaLenguajes/>\r\n                \r\n\r\n            case 'union':\r\n                return <UnionLenguajes/>\r\n                \r\n            \r\n            default:\r\n                return <div className=\"limpio\">\r\n                    <div className=\"images\">\r\n                        <img src=\"https://www.flaticon.es/svg/static/icons/svg/3227/3227485.svg\" alt=\"direccion\"/>\r\n                        <img src=\"https://www.flaticon.es/svg/static/icons/svg/2555/2555375.svg\" alt=\"Opciones\"/>\r\n                    </div>\r\n                    <p>Selecciona una de las opciones que se encuentran en el menú</p>\r\n                </div> \r\n                        \r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        espacioDeOperaciones()\r\n    );\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    operacionSeleccionada: state.operacionLenguaje,\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WorkinSpaceLenguajes);","import React, {Fragment} from 'react';\r\nimport '../styles/styles-operacionesLengujes.scss';\r\nimport { connect } from 'react-redux';\r\nimport WorkinSpaceLenguajes from './workinSpaceLenguajes';\r\n\r\n// import {useState} from 'react';\r\n\r\nconst OperacionesLenguajes = ({actualizarOperacionLenguaje}) => {\r\n\r\n    // PARA REVISAR NO ACTUALIZA EN EL PRIMER CLICK.\r\n    // const [seleccion, setSeleccion] = useState('');\r\n\r\n    // const handleClick = e => {\r\n    //     setSeleccion('actualiza?');\r\n    //     console.log(seleccion);\r\n\r\n    // }\r\n    const handleClick = e => {\r\n        \r\n        actualizarOperacionLenguaje(e.target.id);\r\n        // console.log(operacionSeleccionada);\r\n        document.getElementById(e.target.id).classList.add('seleccionado');\r\n        document.querySelectorAll('li').forEach(elem => {\r\n            // console.log(e.id);\r\n            if(elem.id !== e.target.id){\r\n                // console.log(e.id ,\" ? \",seleccion); \r\n                // debugger;\r\n                if(elem.classList.contains('seleccionado')){\r\n                    // debugger;\r\n                    elem.classList.remove('seleccionado');\r\n                    // debugger;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-md-3 menu\">\r\n                <ul>\r\n                    <li id=\"inverso\" onClick={handleClick} >Inverso de un lenguaje</li>\r\n                    <li id=\"potencia\" onClick={handleClick} >Potencia de un lenguaje</li>\r\n                    <li id=\"concatenacion\" onClick={handleClick} >Concatenación de lenguajes</li>\r\n                    <li id=\"interseccion\" onClick={handleClick} >Intersección de lenguajes</li>\r\n                    <li id=\"diferencia\" onClick={handleClick} >Diferencia entre lenguajes</li>\r\n                    <li id=\"union\" onClick={handleClick} >Union entre lenguajes</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"col-md-9 workin-space\">\r\n                <WorkinSpaceLenguajes/>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    actualizarOperacionLenguaje(nuevaOperacion){\r\n        dispatch({\r\n            type: 'ACTUALIZAR_OPERACION_LENGUAJE',\r\n            nuevaOperacion\r\n        })\r\n    }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(OperacionesLenguajes);","import React, {Fragment} from 'react';\r\nimport Navegacion from '../components/navegacion';\r\nimport FormLenguaje from '../components/formLenguaje';\r\nimport ListLenguaje from '../components/listLenguaje';\r\nimport OperacionesLenguajes from '../components/operacionesLenguajes';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../styles/style-pageLenguajes.scss';\r\n\r\nconst Page_lenguajes = ({actualizarOperacionLenguaje}) => {\r\n    \r\n    const hanldeClick = e => {\r\n        //esto es solo para quitar la seleccion en el menu\r\n        document.querySelectorAll('li').forEach(elem => {\r\n            // console.log(e.id);\r\n            if(elem.id !== e.target.id){\r\n                // console.log(e.id ,\" ? \",seleccion); \r\n                // debugger;\r\n                if(elem.classList.contains('seleccionado')){\r\n                    // debugger;\r\n                    elem.classList.remove('seleccionado');\r\n                    // debugger;\r\n                }\r\n            }\r\n        });\r\n        actualizarOperacionLenguaje(e.target.id)\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <Navegacion location=\"pagelenguajes\" />\r\n            <div className=\"container p-4\">\r\n                <div className=\"row\">\r\n                    <FormLenguaje/>\r\n                    <ListLenguaje/>\r\n                </div>\r\n                <hr/>\r\n                <h2 id=\"limpio\" onClick={hanldeClick} className=\"text-center title-options\">Operaciones entre lenguajes</h2>\r\n                <div className=\"row section-operaciones\">\r\n                    <OperacionesLenguajes/>            \r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    actualizarOperacionLenguaje(nuevaOperacion){\r\n        dispatch({\r\n            type: 'ACTUALIZAR_OPERACION_LENGUAJE',\r\n            nuevaOperacion\r\n        })\r\n    }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Page_lenguajes);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { formatearAlfabeto } from '../modules/modulo1';\r\n\r\nconst FormAlfabeto = ({list,agregarAlfabeto}) => {\r\n\r\n    const [nameAlfabeto,setNameAlfabeto] = useState('');\r\n    const [simbolos,setSimbolos] = useState('');\r\n\r\n    const handleChange = e => {\r\n        if(e.target.name === \"nameAlfabeto\") setNameAlfabeto(e.target.value);\r\n        if(e.target.name === \"simbolos\") setSimbolos(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        var existe = false;\r\n        // console.log(\"lista a comparar\",list);\r\n        list.forEach(e => {\r\n            if(e.nameAlfabeto === nameAlfabeto) return existe=true;\r\n        })\r\n\r\n        //comprueba que los campos esten llenos\r\n        if(nameAlfabeto !== '' && simbolos !== ''){\r\n            //y que el nombre del alfabeto no se repita\r\n            if(existe){\r\n                alert(\"El nombre de tu alfabeto ya existe.\\nPor favor intenta con otro...!\");\r\n            }\r\n            else{\r\n                let simbolosFormateado = formatearAlfabeto(simbolos)\r\n                let alfabeto = {\r\n                    nameAlfabeto: nameAlfabeto,\r\n                    simbolos: simbolosFormateado\r\n                }\r\n                // console.log(lenguaje);\r\n                agregarAlfabeto(alfabeto);\r\n                setNameAlfabeto('');\r\n                setSimbolos('');\r\n            }\r\n        }\r\n        else{\r\n            alert(\"Asegurate de llenar el formulario...!\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"col-md-5\"> \r\n            <div className=\"card-body bg-primary target\">\r\n\r\n                <h3 className=\"text-center\">Alfabeto</h3>\r\n                \r\n                <form onSubmit={handleSubmit} className=\"form\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"label-tx\" htmlFor=\"nameAlfabeto\">Nombre del alfabeto</label>\r\n                        <input autoComplete=\"off\" value={nameAlfabeto} onChange={handleChange} type=\"text\" name=\"nameAlfabeto\" className=\"form-control\" id=\"nameAlfabeto\" placeholder=\"Mi alfabeto\"/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"label-tx\" htmlFor=\"area-texto\">Ingresa simbolos<span>(separando por espacios)</span> </label>\r\n                        <textarea value={simbolos} onChange={handleChange} className=\"form-control\" name=\"simbolos\" rows=\"3\" id=\"area-texto\" placeholder=\"Ejemplo: a b c d e...\" ></textarea>\r\n                    </div>\r\n                    <button className=\"btn btn-block badge-success boton\">Agregar Alfabeto</button>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    list: state.listAlfabetos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    \r\n    agregarAlfabeto(alfabeto){\r\n        dispatch({\r\n            type: 'AGREGAR_ALFABETO',\r\n            alfabeto\r\n        })\r\n    }\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FormAlfabeto);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { imprimirSimbolosFormateado } from '../modules/modulo1';\r\n\r\nconst ListAlfabetos = ({list,eliminarAlfabeto}) => {\r\n\r\n    const mostrarAlfabetos = () => {\r\n        console.log(\"listalfabetos:\",list);\r\n        if(list.length === 0){\r\n            return <div className=\"doc-blank\" >\r\n                <img src=\"https://www.flaticon.es/svg/static/icons/svg/187/187293.svg\" alt=\"docs\"/>\r\n                <h4>¡ Ningun alfabeto por aquí !</h4>\r\n            </div>\r\n        }\r\n        else{\r\n            return list.map((elem,i)=>(\r\n                <div key={i} className=\"card-item\">\r\n                    <div className=\"card-top\">\r\n                        <h3 className=\"alf\">{elem.nameAlfabeto}</h3>\r\n                        <button onClick={\r\n                            () => {if(window.confirm(`Seguro que:\\n¿ Deseas eliminar el alfabeto \"${elem.nameAlfabeto}\" de la lista ?`)) eliminarAlfabeto(elem)}\r\n                        } >X</button>\r\n                    </div>\r\n                    <div className=\"card-info\">\r\n                        <div className=\"alfabeto\">\r\n                            <p>{imprimirSimbolosFormateado(elem)}</p>\r\n                        </div>\r\n                    </div>                    \r\n                </div>\r\n            ))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"col-md-7\">\r\n            <div className=\"contenedor-lenguajes\">\r\n                <h3 className=\"text-center\">Tus Alfabetos</h3>\r\n                {\r\n                    mostrarAlfabetos()\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    list: state.listAlfabetos\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    eliminarAlfabeto(alfabeto){\r\n        dispatch({\r\n            type: 'ELIMINAR_ALFABETO',\r\n            alfabeto\r\n        })\r\n    }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListAlfabetos);","import React,{useState,useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { uniondealfabetos, imprimirAlfabetoFormateado } from '../../modules/modulo1';\r\n\r\nconst UnionAlfabetos = ({alfabetos}) => {\r\n\r\n    const [numeroDeAlfabetos,setNumeroDeAlfabetos] = useState(2);\r\n    const [nombresDeAlfabetosSeleccionados,setNombresDeAlfabetosSeleccionados] = useState([]);\r\n    const [salida,setSalida] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        mostrarBarrasDeSeleccion();\r\n    },[numeroDeAlfabetos])\r\n    \r\n    useEffect(()=>{\r\n        // console.log(nombresDeLenguajesSeleccionados);\r\n        trabajandoSalida();\r\n    },[nombresDeAlfabetosSeleccionados])\r\n\r\n    const trabajandoSalida = () => {\r\n        // console.log(nombresDeLenguajesSeleccionados);\r\n        if(nombresDeAlfabetosSeleccionados.length !== 0){\r\n\r\n            var vecls = [];\r\n            for(let i=0 ; i < nombresDeAlfabetosSeleccionados.length ; i++){\r\n                let elemento = alfabetos.filter( e => e.nameAlfabeto === nombresDeAlfabetosSeleccionados[i]);\r\n                vecls.push(elemento[0]);\r\n            }\r\n            \r\n            setSalida(uniondealfabetos(vecls));\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        if(e.target.value >= 2){\r\n            // console.log(e.target.value);\r\n            setNumeroDeAlfabetos(e.target.value)\r\n        }\r\n        else{\r\n           // console.log(e.target.value);\r\n            setNumeroDeAlfabetos(2);            \r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        // let elemento = document.getElementById(\"lenguaje1SU\");\r\n        // console.log(elemento.value);\r\n\r\n        let nombresAlfabetosSeleccionados = [];\r\n        for (let i=0 ; i < numeroDeAlfabetos ; i++) {\r\n            let elemento = document.getElementById(`alfabeto${i+1}`);\r\n            if(elemento != null){\r\n                nombresAlfabetosSeleccionados.push(elemento.value);\r\n            }\r\n            else console.log(\"no hay nada seleccionado\");\r\n        }\r\n\r\n        console.log(nombresAlfabetosSeleccionados);\r\n        \r\n        var seleccionesCompletas = true\r\n        for(let i=0 ; i < nombresAlfabetosSeleccionados.length ; i++){\r\n            if(nombresAlfabetosSeleccionados[i] === \"Alfabeto...\"){\r\n                seleccionesCompletas = false;\r\n            }\r\n        }\r\n\r\n        console.log(seleccionesCompletas);\r\n        if(seleccionesCompletas){\r\n            setNombresDeAlfabetosSeleccionados(nombresAlfabetosSeleccionados);\r\n        }\r\n        else alert(\"En la operación union de alfabetos es necesario\\nque complete la cantidad de alfabetos que selecciono.\\nDe lo contrario seleccione otra cantidad\");\r\n        \r\n    }\r\n\r\n    const mostrarBarrasDeSeleccion = () => {\r\n        //rebusque jajaja\r\n        let vector = [];\r\n        for (let i=0 ; i < numeroDeAlfabetos ; i++) vector.push('x');\r\n\r\n        return vector.map((e,i)=>(\r\n            <div key={i+1} className=\"col\">\r\n                <label htmlFor={`alfabeto${i+1}`}>Selecciona el alfabeto {`${i+1}`}</label>\r\n                <select id={`alfabeto${i+1}`} className=\"form-control\">\r\n                    <option>Alfabeto...</option>\r\n                    {alfabetos.map(a => <option key={a.nameAlfabeto}>{a.nameAlfabeto}</option>)}\r\n                </select>\r\n            </div>\r\n        ))\r\n\r\n        //si jala carajoo\r\n    }\r\n\r\n    return(\r\n        <div className=\"formato-seleccion-lenguajes\">\r\n            <h3>Union entre Alfabetos</h3>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-row row-1\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"numeroalfabetos\">Numero de alfabetos</label>\r\n                        <select onChange={handleChange} id=\"numeroalfabetos\" value={numeroDeAlfabetos} className=\"form-control\">\r\n                            <option>2</option>\r\n                            {alfabetos.map((e,i) => {if(i>=2){return <option key={i}>{i+1}</option>}})}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row row-2\">\r\n                    {mostrarBarrasDeSeleccion()}\r\n                </div>\r\n\r\n                <div className=\"col-auto\">\r\n                    <button className=\"btn btn-success boton btn-block\">Go</button>\r\n                </div>\r\n\r\n            </form>\r\n            <div className=\"Salida\">\r\n                <p>{imprimirAlfabetoFormateado(salida)}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alfabetos: state.listAlfabetos\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UnionAlfabetos);","import React,{useState,useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { diferenciaAlfabetos , imprimirAlfabetoFormateado } from '../../modules/modulo1';\r\n\r\nconst DiferenciaAlfabetos = ({alfabetos}) => {\r\n\r\n    const [nombresDeAlfabetosSeleccionados,setNombresDeAlfabetosSeleccionados] = useState([]);\r\n    const [salida,setSalida] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        trabajandoSalida();\r\n    },[nombresDeAlfabetosSeleccionados])\r\n\r\n    const trabajandoSalida = () => {\r\n        // console.log(nombresDeLenguajesSeleccionados);\r\n        if(nombresDeAlfabetosSeleccionados.length !== 0){\r\n\r\n            var vecls = [];\r\n            for(let i=0 ; i < nombresDeAlfabetosSeleccionados.length ; i++){\r\n                let elemento = alfabetos.filter( e => e.nameAlfabeto === nombresDeAlfabetosSeleccionados[i]);\r\n                vecls.push(elemento[0]);\r\n            }\r\n            \r\n            setSalida(diferenciaAlfabetos(vecls));\r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let nombresAlfabetosSeleccionados = [];\r\n        for (let i=0 ; i < 2 ; i++) {\r\n            let elemento = document.getElementById(`alfabeto${i+1}`);\r\n            if(elemento != null){\r\n                nombresAlfabetosSeleccionados.push(elemento.value);\r\n            }\r\n            else console.log(\"no hay nada seleccionado\");\r\n        }\r\n        console.log(nombresAlfabetosSeleccionados);\r\n        if(nombresAlfabetosSeleccionados[0] !== \"Alfabeto...\"){\r\n            if(nombresAlfabetosSeleccionados[1] !== \"Alfabeto...\"){\r\n                setNombresDeAlfabetosSeleccionados(nombresAlfabetosSeleccionados);\r\n            }\r\n            else{\r\n                alert(\"En la operación diferencia de alfabetos es necesario\\nque seleccione dos alfabetos:\\npor favor escoja el alfabeto 2\");\r\n            }\r\n        }\r\n        else{\r\n            alert(\"En la operación diferencia de alfabetos es necesario\\nque seleccione dos alfabetos:\\npor favor escoja el alfabeto 1\");\r\n        }\r\n\r\n    }\r\n\r\n    const mostrarBarrasDeSeleccion = () => {\r\n        //rebusque jajaja\r\n        let vector = [];\r\n        for (let i=0 ; i < 2 ; i++) vector.push('x');\r\n\r\n        return vector.map((e,i)=>(\r\n            <div key={i+1} className=\"col\">\r\n                <label htmlFor={`alfabeto${i+1}`}>Selecciona el lenguaje {`${i+1}`}</label>\r\n                <select id={`alfabeto${i+1}`} className=\"form-control\">\r\n                    <option>Alfabeto...</option>\r\n                    {alfabetos.map(a => <option key={a.nameAlfabeto}>{a.nameAlfabeto}</option>)}\r\n                </select>\r\n            </div>\r\n        ))\r\n\r\n        //si jala carajoo\r\n    }\r\n\r\n    return(\r\n        <div className=\"formato-seleccion-lenguajes\">\r\n            <h3>Diferencia entre alfabetos</h3>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-row row-unica\">\r\n                    {mostrarBarrasDeSeleccion()}\r\n                </div>\r\n\r\n                <div className=\"col-auto\">\r\n                    <button className=\"btn btn-success boton btn-block\">Go</button>\r\n                </div>\r\n\r\n            </form>\r\n            <div className=\"Salida-unica\">\r\n                <p>{imprimirAlfabetoFormateado(salida)}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alfabetos: state.listAlfabetos\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DiferenciaAlfabetos);","import React,{useState,useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { interseccionAlfabetos , imprimirAlfabetoFormateado } from '../../modules/modulo1';\r\n\r\nconst InterseccionAlfabetos = ({alfabetos}) => {\r\n\r\n    const [nombresDeAlfabetosSeleccionados,setNombresDeAlfabetosSeleccionados] = useState([]);\r\n    const [salida,setSalida] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        trabajandoSalida();\r\n    },[nombresDeAlfabetosSeleccionados])\r\n\r\n    const trabajandoSalida = () => {\r\n        // console.log(nombresDeLenguajesSeleccionados);\r\n        if(nombresDeAlfabetosSeleccionados.length !== 0){\r\n\r\n            var vecls = [];\r\n            for(let i=0 ; i < nombresDeAlfabetosSeleccionados.length ; i++){\r\n                let elemento = alfabetos.filter( e => e.nameAlfabeto === nombresDeAlfabetosSeleccionados[i]);\r\n                vecls.push(elemento[0]);\r\n            }\r\n            \r\n            setSalida(interseccionAlfabetos(vecls));\r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let nombresAlfabetosSeleccionados = [];\r\n        for (let i=0 ; i < 2 ; i++) {\r\n            let elemento = document.getElementById(`alfabeto${i+1}`);\r\n            if(elemento != null){\r\n                nombresAlfabetosSeleccionados.push(elemento.value);\r\n            }\r\n            else console.log(\"no hay nada seleccionado\");\r\n        }\r\n        console.log(nombresAlfabetosSeleccionados);\r\n        if(nombresAlfabetosSeleccionados[0] !== \"Alfabeto...\"){\r\n            if(nombresAlfabetosSeleccionados[1] !== \"Alfabeto...\"){\r\n                setNombresDeAlfabetosSeleccionados(nombresAlfabetosSeleccionados);\r\n            }\r\n            else{\r\n                alert(\"En la operación intersección de alfabetos es necesario\\nque seleccione dos alfabetos:\\npor favor escoja el alfabeto 2\");\r\n            }\r\n        }\r\n        else{\r\n            alert(\"En la operación intersección de alfabetos es necesario\\nque seleccione dos alfabetos:\\npor favor escoja el alfabeto 1\");\r\n        }\r\n\r\n    }\r\n\r\n    const mostrarBarrasDeSeleccion = () => {\r\n        //rebusque jajaja\r\n        let vector = [];\r\n        for (let i=0 ; i < 2 ; i++) vector.push('x');\r\n\r\n        return vector.map((e,i)=>(\r\n            <div key={i+1} className=\"col\">\r\n                <label htmlFor={`alfabeto${i+1}`}>Selecciona el lenguaje {`${i+1}`}</label>\r\n                <select id={`alfabeto${i+1}`} className=\"form-control\">\r\n                    <option>Alfabeto...</option>\r\n                    {alfabetos.map(a => <option key={a.nameAlfabeto}>{a.nameAlfabeto}</option>)}\r\n                </select>\r\n            </div>\r\n        ))\r\n\r\n        //si jala carajoo\r\n    }\r\n\r\n    return(\r\n        <div className=\"formato-seleccion-lenguajes\">\r\n            <h3>Intersección entre alfabetos</h3>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-row row-unica\">\r\n                    {mostrarBarrasDeSeleccion()}\r\n                </div>\r\n\r\n                <div className=\"col-auto\">\r\n                    <button className=\"btn btn-success boton btn-block\">Go</button>\r\n                </div>\r\n\r\n            </form>\r\n            <div className=\"Salida-unica\">\r\n                <p>{imprimirAlfabetoFormateado(salida)}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alfabetos: state.listAlfabetos\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(InterseccionAlfabetos);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport UnionAlfabetos from './operacionesAlfabetos/unionAlfabetos';\r\nimport DiferenciaAlfabetos from './operacionesAlfabetos/diferenciaAlfabetos';\r\nimport InterseccionAlfabetos from './operacionesAlfabetos/interseccionAlfabetos';\r\n\r\nconst WorkinSpaceAlfabetos = ({operacionSeleccionada}) => {\r\n\r\n    const espacioDeOperaciones = () => {\r\n\r\n        switch (operacionSeleccionada) {\r\n\r\n            \r\n            case 'union':\r\n                return <UnionAlfabetos/>\r\n            \r\n            case 'diferencia':\r\n                return <DiferenciaAlfabetos/>\r\n                    \r\n            case 'interseccion':\r\n                return <InterseccionAlfabetos/>\r\n            \r\n            default:\r\n                return <div className=\"limpio\">\r\n                    <div className=\"images\">\r\n                        <img src=\"https://www.flaticon.es/svg/static/icons/svg/3227/3227485.svg\" alt=\"direccion\"/>\r\n                        <img src=\"https://www.flaticon.es/svg/static/icons/svg/2555/2555375.svg\" alt=\"Opciones\"/>\r\n                    </div>\r\n                    <p>Selecciona una de las opciones que se encuentran en el menú</p>\r\n                </div> \r\n                        \r\n        }\r\n\r\n    }\r\n    \r\n    return(\r\n        espacioDeOperaciones()\r\n    );\r\n\r\n}   \r\n\r\nconst mapStateToProps = state => ({\r\n    operacionSeleccionada: state.operacionAlfabeto,\r\n})\r\n\r\nconst mapDispatchToProps = dispach => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WorkinSpaceAlfabetos);","import React, {Fragment} from 'react';\r\nimport '../styles/styles-operacionesLengujes.scss';\r\nimport { connect } from 'react-redux';\r\nimport WorkinSpaceAlfabetos from '../components/workinSpaceAlfabetos';\r\n\r\nconst OperacionesAlfabetos = ({actualizarOperacionAlfabeto}) => {\r\n\r\n    const handleClick = e => {\r\n        \r\n        actualizarOperacionAlfabeto(e.target.id);\r\n        // console.log(operacionSeleccionada);\r\n        document.getElementById(e.target.id).classList.add('seleccionado');\r\n        document.querySelectorAll('li').forEach(elem => {\r\n            // console.log(e.id);\r\n            if(elem.id !== e.target.id){\r\n                // console.log(e.id ,\" ? \",seleccion); \r\n                // debugger;\r\n                if(elem.classList.contains('seleccionado')){\r\n                    // debugger;\r\n                    elem.classList.remove('seleccionado');\r\n                    // debugger;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-md-3 menu\">\r\n                <ul>\r\n                    <li id=\"union\" className=\"alf\" onClick={handleClick} >Union entre Alfabetos</li>\r\n                    <li id=\"diferencia\" className=\"alf\" onClick={handleClick} >Diferencia entre Alfabetos</li>\r\n                    <li id=\"interseccion\" className=\"alf\" onClick={handleClick} >Intersección entre Alfabetos</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"col-md-9 workin-space\">\r\n                <WorkinSpaceAlfabetos/>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    actualizarOperacionAlfabeto(nuevaOperacion){\r\n        dispatch({\r\n            type: 'ACTUALIZAR_OPERACION_ALFABETO',\r\n            nuevaOperacion\r\n        })\r\n    }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(OperacionesAlfabetos);","import React, { Fragment } from 'react';\r\nimport Navegacion from '../components/navegacion';\r\nimport FormAlfabeto from '../components/formAlfabeto';\r\nimport ListAlfabetos from '../components/listAlfabetos';\r\nimport OperacionesAlfabetos from '../components/operacionesAlfabetos';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport '../styles/style-pageLenguajes.scss';\r\nimport operacionesAlfabetos from '../components/operacionesAlfabetos';\r\n\r\nconst Page_alfabetos = ({actualizarOperacionAlfabeto}) => {\r\n    \r\n    const hanldeClick = e => {\r\n        //esto es solo para quitar la seleccion en el menu\r\n        document.querySelectorAll('li').forEach(elem => {\r\n            // console.log(e.id);\r\n            if(elem.id !== e.target.id){\r\n                // console.log(e.id ,\" ? \",seleccion); \r\n                // debugger;\r\n                if(elem.classList.contains('seleccionado')){\r\n                    // debugger;\r\n                    elem.classList.remove('seleccionado');\r\n                    // debugger;\r\n                }\r\n            }\r\n        });\r\n        actualizarOperacionAlfabeto(e.target.id)\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <Navegacion location=\"pagealfabetos\" />\r\n            <div className=\"container p-4\">\r\n                <div className=\"row\">\r\n                    <FormAlfabeto/>\r\n                    <ListAlfabetos/>\r\n                </div>\r\n                <hr/>\r\n                <h2 id=\"limpio\" onClick={hanldeClick} className=\"text-center title-options\">Operaciones entre alfabetos</h2>\r\n                <div className=\"row section-operaciones\">\r\n                    <OperacionesAlfabetos/>            \r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    actualizarOperacionAlfabeto(nuevaOperacion){\r\n        dispatch({\r\n            type: 'ACTUALIZAR_OPERACION_ALFABETO',\r\n            nuevaOperacion\r\n        })\r\n    }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Page_alfabetos);","import React,{useState,useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { formatearAlfabeto } from '../modules/modulo1';\r\n\r\nconst FormPalabra = ({palabras,agregarPalabra}) => {\r\n\r\n    const [palabra,setPalabra] = useState('');\r\n\r\n    useEffect(()=>{\r\n        centrarFormulario();\r\n    },[palabras])\r\n\r\n    const centrarFormulario = () => {\r\n        let elemento = document.getElementById(\"centrar\");\r\n        if(palabras.length === 0){\r\n            if(elemento !== null){\r\n                elemento.classList.add(\"offset-md-4\")\r\n            }\r\n        }\r\n        else{\r\n            if(elemento !== null){\r\n                elemento.classList.remove(\"offset-md-4\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        console.log(e.target.value);\r\n        setPalabra(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        let existe = false;\r\n        //quito espacios comparo\r\n        let palSinEspVec = formatearAlfabeto(palabra);\r\n        // console.log(palSinEspVec);\r\n        let palSinEsp = palSinEspVec[0];\r\n        \r\n        palabras.forEach(p => {\r\n            if(p === palSinEsp){\r\n                existe = true;\r\n            }\r\n        })\r\n        if(!existe){\r\n            agregarPalabra(palSinEsp);\r\n            setPalabra('');\r\n        } \r\n        else alert(\"Esta palabra ya esta listada, por favor intenta otra...!\");\r\n    }\r\n\r\n    return(\r\n        //offset-md-4\r\n        <div id=\"centrar\" className=\"col-md-4\">\r\n            <div className=\"card-body bg-primary targetpal\">\r\n                <h3 className=\"text-center\">Palabras</h3>\r\n                <form onSubmit={handleSubmit} className=\"form\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"label-tx\" htmlFor=\"palabra\">Ingresa tu palabra</label>\r\n                        <input autoComplete=\"off\" value={palabra} onChange={handleChange} type=\"text\" id=\"palabra\" name=\"palabra\" className=\"form-control\" placeholder=\"...\"/>\r\n                    </div>\r\n                    <button className=\"btn btn-block badge-success boton\">Agregar Palabra</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    palabras: state.listPalabras\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    agregarPalabra(palabra){\r\n        dispatch({\r\n            type: 'AGREGAR_PALABRA',\r\n            palabra\r\n        })\r\n    }\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FormPalabra);","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//Importando funcuonalidad de los modulos\r\nimport { invertirPalabra } from '../modules/modulo1';\r\n\r\nconst ListLenguaje = ({palabras,eliminarPalabra}) => {\r\n\r\n    return(\r\n        <Fragment>\r\n            {\r\n                palabras.length !== 0 && \r\n                <div className=\"col-md-8\">\r\n                    <div className=\"contenedor-palabras\">\r\n                        <h3 className=\"text-center\">Tus Palabras</h3>\r\n                        <table class=\"table table-striped table-light table-bordered\" >\r\n                            <thead className=\"text-center\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Palabra</th>\r\n                                    <th scope=\"col\">Cardinalidad</th>\r\n                                    <th scope=\"col\">Inversa</th>\r\n                                    <th scope=\"col\">Opciones</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"text-center\">\r\n                                {\r\n                                    palabras.map((e,i) => (\r\n                                        <tr key={i}>\r\n                                            <td>{e}</td>\r\n                                            <td>{e.length}</td>\r\n                                            <td>{invertirPalabra(e)}</td>\r\n                                            <td>\r\n                                                <img \r\n                                                    src=\"https://img.icons8.com/flat_round/64/000000/delete-sign.png\"\r\n                                                    onClick={()=>{eliminarPalabra(e)}}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\n//utilizando el store de redux\r\n\r\nconst mapStateToProps = state => ({\r\n    palabras: state.listPalabras\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    eliminarPalabra(palabra){\r\n        dispatch({\r\n            type: 'ELIMINAR_PALABRA',\r\n            palabra\r\n        })\r\n    }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListLenguaje);","import React, { Fragment } from 'react';\r\nimport Navegacion from '../components/navegacion';\r\n\r\nimport FormPalabras from '../components/formPalabra';\r\nimport ListPalabras from '../components/listPalabras';    \r\n\r\nimport '../styles/style-pagePalabras.scss';\r\n\r\nconst Page_palabras = () => {\r\n    return(\r\n        <Fragment>\r\n            <Navegacion location=\"pagepalabras\" />\r\n            <div className=\"container p-4\">\r\n                <div className=\"row\">\r\n                    <FormPalabras/>\r\n                    <ListPalabras/>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Page_palabras;","import { createStore } from 'redux';\r\n\r\nconst initialState = {\r\n    listLenguajes: [\r\n        {\r\n            nameLenguaje: 'Vacio',\r\n            alfabeto: [\"Φ\"]\r\n        },\r\n        {\r\n            nameLenguaje: 'Lenguaje Vacio',\r\n            alfabeto: [\"ε\"]\r\n        }\r\n    ],\r\n    listAlfabetos: [],\r\n    listPalabras: [],\r\n    operacionLenguaje: '',\r\n    operacionAlfabeto: ''\r\n}\r\n\r\nconst reducer = (state=initialState,action) => {\r\n\r\n    console.log(action);\r\n\r\n    switch(action.type){\r\n        case 'AGREGAR_LENGUAJE':\r\n            return {\r\n                ...state,\r\n                listLenguajes: state.listLenguajes.concat(action.lenguaje)\r\n            }\r\n\r\n        case 'ELIMINAR_LENGUAJE':\r\n            return {\r\n                ...state,\r\n                listLenguajes: state.listLenguajes.filter(l => l.nameLenguaje !== action.lenguaje.nameLenguaje)\r\n            }\r\n        \r\n        case 'ACTUALIZAR_OPERACION_LENGUAJE':\r\n            return {\r\n                ...state,\r\n                operacionLenguaje: action.nuevaOperacion\r\n            }\r\n        \r\n        case 'AGREGAR_ALFABETO':\r\n            console.log(\"entro y agrego\");\r\n            return {\r\n                ...state,\r\n                listAlfabetos: state.listAlfabetos.concat(action.alfabeto)\r\n            }\r\n\r\n        case 'ELIMINAR_ALFABETO':\r\n            return {\r\n                ...state,\r\n                listAlfabetos: state.listAlfabetos.filter(l => l.nameAlfabeto !== action.alfabeto.nameAlfabeto)\r\n            }\r\n\r\n        case 'ACTUALIZAR_OPERACION_ALFABETO':\r\n            return {\r\n                ...state,\r\n                operacionAlfabeto: action.nuevaOperacion\r\n            }\r\n\r\n        case 'AGREGAR_PALABRA':\r\n            return {\r\n                ...state,\r\n                listPalabras: state.listPalabras.concat(action.palabra)\r\n            }    \r\n\r\n        case 'ELIMINAR_PALABRA':\r\n            return {\r\n                ...state,\r\n                listPalabras: state.listPalabras.filter(l => l !== action.palabra)\r\n            }\r\n\r\n        default:\r\n            break;\r\n    }\r\n    \r\n\r\n    return state;\r\n}\r\n\r\nexport default createStore(reducer);","import React from 'react';\r\nimport Page_lenguajes from '../pages/page_lenguajes';\r\nimport Page_alfabetos from '../pages/page_alfabetos';\r\nimport Page_palabras from '../pages/page_palabras';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport Store from '../store';\r\n\r\nconst App = () => {\r\n\r\n    return(\r\n        <Provider store={Store}>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Page_lenguajes} />\r\n                    <Route exact path=\"/alfabetos\" component={Page_alfabetos} />\r\n                    <Route exact path=\"/palabras\" component={Page_palabras} />\r\n                </Switch>\r\n            </Router>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './components/app.jsx';\r\n\r\n//Importando estilos\r\nimport 'bootswatch/dist/lux/bootstrap.min.css';\r\nimport './styles/main.scss';\r\n\r\nrender(<App/>,document.getElementById(\"root\"));"],"sourceRoot":""}